FORMAT: 1A
HOST: https://zakaznik.kravihora-brno.cz/wardeneta-api/ra

# Wardeneta - Klientská zóna v1

Popis API klientské zóny systému Wardeneta.

# Group Autentikace a autorizace

Pro přístup k API je nutná autentikace pomocí [OAuth 2.0](https://oauth.net/2/) protokolu.
Základní podmínou pro správnou funkci autentikace a autorizace API je použití šifrovaného kanálu pomocí
[SSL(HTTPS)](https://tools.ietf.org/html/rfc6101) mechanismu.

<a name="my-anchor-token"></a>
## Token

Autentikační schéma používá `token`, který se předává pomocí HTTP headeru. Obsah tokenu
je znám pouze mezi serverem a klientem.

## OAuth 2.0

OAuth 2.0 je autorizační rámec, který poskytuje klientovi omezený přístup k API. Klient
iniciuje interaktivní proces, který vede k získání povolení pro přístup ke danému zdroji.

## Typy (grant type)

Použitý `grant_type` určuje jaký postup vede k získání tokenu. Podporované typy jsou:

+ *Client credentials*:
Klient použije své důvěrné informace, např. heslo, k získání tokenu.
+ *Authorization code*:
Používá se režim přesměrování, kdy kód klienstké strany (a tedy i důvěrné údaje klienta)
zůstávají utajeny, tedy za druhým web serverem.

## Použitá URL

Pro práci s tokenem se používají tyto urlencoded

+ *Autorizační URL*:
Na toto URL je klient přesměrován, když potřebuje autorizovat uživatele. Uživatel se autentikuje
vůči službe a potvrdí požadovaná povolení před přesměrovánim zpět.

+ *Tokenové URL*:
Na tomto URL klient požádá o získání tokenu, který ho autentikuje a autorizuje ho k použití některých
služeb v zastoupení vlastníka zdroje.

## Scopes

*Scopes* umožňují dále zjemnit práva k danému zdroji.

## Autorizace uživatele [/api/v1/auth]

Slouží k ověření uživatele a povolení přístupu k aplikaci třetí strany.

### Získání autorizačního kódu [GET /api/v1/auth{?client_id,scope,redirect_uri,state,code_challenge_method,code_challenge}]

Akce vyvolá proces autorizace na autorizačním serveru. Pomocí návratového URL, předanému jako parametr volání
se pak získá autorizační kód potřebný pro [[získání tokenu](#my-anchor-ac)).

+ Request (application/json; charset=utf-8)

+ Parameters
  + `client_id` : `1234567890` (string,required) - ID aplikace, pro kterou se má
  proběhnout autentikace uživatele. Toto ID bude předem předáno druhé straně.
  + scope :  `app_access` (string,required) - požadované právo pro přístop ke zdroji
  + redirect_uri :  `https://www.example.com/fallback` (string,required) - URL, na které bude uživatel přesměrován po autentikaci. Pro dané
  *client_id* jsou definován apovolené hodnoty tohoto údaje.
  + state : `abc878787xz` (string,required) - hodnota, která bude vrácena zpět při vyvolání *redirect_uri*. Klienstká aplikace
  by měla ověřit, že zpět dostala stejnou hodnotu, ktreou poslala.
  + code_challenge_method : `S256` (string,required) - určuje jaká metoda byla použita k získání nasledujícího údaje.
  Podporováné hodnoty jsou:
     + `S256` - SHA256
  + `code_challenge` : `qjrzSW9gMiUgpUvqgEPE4_-8swvyCtfOVvg55o5S_es` (string,required) - digitální hash v BASE64 náhodného textu. Tento text bude součásti požadavku o získání tokenu, viz níže.

+ Response 204

## Správa tokenu [/api/v1/oauth2/token]

Tyto zprávy slouží k správě autentikačních ([tokenu](#my-anchor-token)).

### Získání tokenu [POST /api/v1/oauth2/token]

Požadavek na vystavení nového tokenu pomocí metody `client_credentials`

+ Request (application/x-www-form-urlencoded; charset=utf-8)
<a name="my-anchor-cc"></a>
Použití důvěrných informací, tedy metody `client_credentials`

    + Attributes (OAuth grant request)

    + Headers

            Authorization: Basic ABCDEF

+ Response 200  (application/json)

    + Attributes (OAuth valid response)

+ Response 403

+ Request (application/x-www-form-urlencoded; charset=utf-8)
<a name="my-anchor-ac"></a>
Požadavek na vystavení nového tokenu pomocí metody `authorization_code`

    + Attributes (OAuth authorization code grant request)

    + Headers

            Authorization: Basic ABCDEF

+ Response 200  (application/json)

    + Attributes (OAuth valid response)

+ Response 403

### Zrušení tokenu [DELETE]

Umožňuje zrušit/zneaktivnit existující token.

+ Request (application/x-www-form-urlencoded; charset=utf-8)

+ Response 204

# Group Zákazník

## Aktuální zákazník [/api/v1/customers/myself]
Správa údajů o zákazníkovi, který je akuálně přihlašen (vlastní `access_token`).

### Zobrazit detail [GET]
Vrátí detail aktuálního zákazníka

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer ABCDEF...

+ Response 200 (application/json)
    + Attributes (Customer1)

### Změnit detail [PUT]
Přestaví údaje u aktuálního zákazníka

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: Bearer ABCDEF...

    + Attributes (Customer2)

+ Response 204

## Zákazník s daným ID [/api/v1/customers/{customer_id}]
Správa údajů o zákazníkovi s daným identifikátorem. Dostupné pouze s  odpovídajcím oprávněním.

+ Parameters
    + customer_id : `1234567890` (number) - ID zákazníka

### Zobrazit detail [GET]
Vrátí detail daného zákazníka

+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer ABCDEF...

+ Response 200 (application/json)
    + Attributes (Customer1)

### Změnit detail [PUT]
Přestaví údaje u daného zákazníka

+ Request (application/json)

        + Headers

            Accept: application/json
            Authorization: Bearer ABCDEF...

    + Attributes (Customer2)

+ Response 204

# Group Karty

## Karty aktuálního zákazníka [/api/v1/customers/myself/cards]
Správa údajů o kartách patřících zákazníkovi, který je akuálně přihlašen (vlastní `access_token`).

### Zobrazit seznam [GET /api/v1/customers/myself/cards{?inactive}]
Vrátí seznam karet aktuálního zákazníka

+ Parameters
    + `inactive` : `true` (boolean,required) - příznak umožňující vrátit v seznamu i neaktivní karty.
                    Default vrací pouze aktivní.


+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer ABCDEF...

+ Response 200 (application/json)
    + Attributes (Cards)

## Karta podle ID [/api/v1/customers/myself/cards/{cardId}]
Správa údajů o kartě patřící zákazníkovi, který je akuálně přihlašen (vlastní `access_token`).

+ Parameters
    + `cardId` : `767c2c52-8779-4d0a-8192-ec8ee3d8209e` (string,required) - ID karty

### Zobrazit záznam [GET]
Vrátí seznam karet aktuálního zákazníka

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer ABCDEF...

+ Response 200 (application/json)
    + Attributes (Card)

### Upravit údaje [PUT]

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer ABCDEF...

    + Attributes (Card change)

+ Response 200 (application/json)
Údaje úspěšně upraveny.

    + Attributes (Card)

### Zablokovat [PUT /api/v1/customers/myself/cards/{cardId}/block]

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer ABCDEF...

+ Response 200 (application/json)
Karta úspěšně zablokována.

    + Attributes (Card)

+ Response 404
Karta s tímto ID nenalezena.

+ Response 409
Kartu s tímto ID nelze zablokovat.

### Odblokovat [PUT /api/v1/customers/myself/cards/{cardId}/unblock]

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer ABCDEF...

+ Response 200 (application/json)
Karta úspěšně odblokována.

    + Attributes (Card)

+ Response 404
Karta s tímto ID nenalezena.

+ Response 409
Kartu s tímto ID nelze odblokovat.

# Group Návštěvy

## Návštěvy aktuálního zákazníka [/api/v1/customers/myself/visits]
Informace o návštěvách provedených zákazníkem, který je akuálně přihlašen (vlastní `access_token`),
anebo na vstupenky jím pořízených.

### Zobrazit seznam [GET]
Vrátí seznam návštěv aktuálního zákazníka

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer ABCDEF...

+ Response 200 (application/json)
    + Attributes (Visits)


# Group Nákupní košík

## Správa nákupního košíku [/api/v1/baskets]

Nákupní košík uchovává aktuální stav prováděného nákupu v e-shopu.


### Můj košík [GET]

Vrátí nakupní košík aktuálního zákazníka (dle autentikačního tokenu).

+ Request

    + Headers

            Authorization: Bearer 874887d6ecd0b106a47448c5beca1
            Accept: application/json

+ Response 200 (application/json)

    + Attributes (Basket)


### Košík dle ID [GET /api/v1/baskets/{basketId}]

Vrátí nakupní košík s daným ID.

+ Parameters

    + basketId: `ABCD-...` (string, required) - ID košíku

+ Request

    + Headers

            Authorization: Bearer 874887d6ecd0b106a47448c5beca1
            Accept: application/json

+ Response 200 (application/json)

    + Attributes (Basket)


### Faktura pro košík  [GET /api/v1/baskets/{basketId}/invoice]

Vrátí PDF fakturu pro nakupní košík s daným ID.

+ Parameters

    + basketId: `ABCD-...` (string, required) - ID košíku

+ Request

    + Headers

            Authorization: Bearer 874887d6ecd0b106a47448c5beca1
            Accept: application/pdf

+ Response 200 (application/pdf)

### Obnovit košík [PUT /api/v1/baskets/{basketId}]
Umožňuje synchronizovat stav a obsah košíku se serverem.

+ Request (application/json)

    + Headers

            Authorization: Bearer 874887d6ecd0b106a47448c5beca1
            Accept:application/json

    + Attributes (Obnova košíkuRequest)

+ Response 200

    + Attributes (Basket)

### Přidat zboží [PUT /api/v1/baskets/{basketId}/goods]
Umožňuje přidat 1 nebo více položek zboží do košíku

+ Parameters
    + basketId: `ABCD-...` (string, required) - ID košíku

+ Request (application/json)
    + Headers

            Accept:application/json


+ Response 200 (application/json)
    + Attributes (Přidat zboží)


### Přidat pronájem [PUT /api/v1/baskets/{basketId}/reservations]
Umožňuje přidat 1 nebo více položek zboží do košíku

+ Parameters
    + basketId: `ABCD-...` (string, required) - ID košíku

+ Request (application/json)
    + Headers

            Accept:application/json

+ Response 200 (application/json)
    + Attributes (Přidat pronájem)


### Přidat kupón [PUT /api/v1/baskets/{basketId}/coupons]
Přidá ke košíku slevový kupón. Slevový kupón snižuje celkovou cenu košíku.


#### Tělo zprávy

| Název atributu | Popis | Typ |
|-------|----------|----|
| basket | Objekt **košíku** podle popisu viz [Datové typy](#datove-typy) | objekt |
| coupons | Pole objektů identifikujících kupóny k přidání viz **Objekt kupón** níže  | array |





| Název atributu | Popis | Typ |
|-------|----------|----|
| couponId | Identifikátor kupónu  | string |




#### HTTP kódy


| Kód | Význam |
|:---:|----------|
| 200 | OK |
| 400 | Vadný obsah zprávy |
| 404 | Platný kupón nenalezen |
| 409 | Nesouhlas ID košíku v URL a ve zprávě |

#### Odpověď


Objekt **košíku** podle popisu viz [Datové typy](#datove-typy)

+ Parameters
    + basketId: `ABCD-...` (string, required) - ID košíku

+ Request (application/json)
    + Headers

            Accept:application/json

+ Response 200 (application/json)
    + Attributes (Přidat pronájem)



## Jednotlivé položky v košíku [/v1/baskets/{basketId}/items/{itemId}]

+ Parameters

    + basketId (string, required)
    + itemId (string, required)


### Odstranit položku z košíku [DELETE]
Umožňuje odstranit danou položku z nákupního košíku

+ Request (application/json)
    + Headers

            Accept:application/json




+ Response 200




## Kupón v košíku [/v1/baskets/{basketId}/coupons/{couponId}]

+ Parameters

    + basketId (string, required)
    + couponId (string, required)


### Odstranit slevový kupón [DELETE]
Odstraní kupón s daným ID ze seznamu slev pro daný košík.

+ Request (application/json)

    + Attributes (Basket)


+ Response 200 (application/json)

    + Attributes (Basket)

+ Response 404

        Kupón s daným ID není přiřazen mezi slevami pro daný košík

+ Response 400

        ID košíku v URL neodpov9d8 ID košíku v těle zpávy

# Group Zboží

## Kupón dle ID [/v1/my/institutions/coupons/{couponId}]

+ Parameters

    + couponId (string, required)

### Kupón podle ID [GET]
Vrátí informaci o daném slevovém kupónu.

+ Request
    + Headers

            Accept:application/json

+ Response 200 (application/json)

    + Attributes (Kupón 30201105)

# Group Pronájmy

## Obsazenost daného provozu [/v1/my/institutions/establishments/{establishmentId}/occupancies/{occupancyDate}/{?days}]

+ Parameters

    + establishmentId: `2` (string, required) - ID provozu
    + occupancyDate: `2018-07-31` (string, required) - den počátku výpisu
    + days: `7` (number, optional) - počet dnů, pro které se má vrátit seznam obsazenosti

### Obsazenost provozu [GET]
Vrací obsazenost daného provozu v daný den. Provoz se dělí do zón. Každá zóna má samostatné nastavení
obsazenosti.
V rámci dne se může vyskytovat několik druhů aktivit/stavů, případně může být provoz uzavřen. Příznaky aktivity
určují dostupné operace nad danou aktivitou. Aktuálně vyskytující se aktivity jsou:
+ `Zavřeno` - provoz/zóna je momentálně uzavřena
+ `Otevřeno bez možnosti pronájmu` - otevřeno pro veřejné aktivity, nelze vložit soukromý pronájem
+ `Otevřeno s možností pronájmu` - otevřeno pro veřejné aktivity, je možné soukromně pronajmout
+ `Obsazeno - uzavřená lekce` - pronajmuto kurzem, do kterého není možné dodatečně vstoupit
+ `Obsazeno - otevřená lekce` . prnajmuto aktivitou, u které je možné se nahlásit do jednotlivé lekce

+ Request (application/json)
    + Headers

            Accept:application/json

+ Response 200 (application/json)
    + Attributes (array[Obsazenost provozu s pronájmem])



## Pronájem dle ID [/v1/my/institutions/reservations/{reservationId}]

+ Parameters
    + reservationId (string, required)


### Pronájem podle ID [GET]
Vrátí pronájem s daným ID

+ Request
    + Headers

            Accept:application/json




+ Response 200



# Group Obecné

## Soubor dle ID [/v1/my/institutions/files/{fileId}]

+ Parameters
    + fileId (string, required)


### Obsah souboru [GET]
Vrátí obsah souboru

+ Request
    + Headers

            Accept:application/octet-stream




+ Response 200





# Group GDPR

## GDPR příznaky [/api/v1/gdpr-states]

### Seznam GDPR požadavků [GET]
Vrátí seznam položek, které jsou zákazníkovi nabídnty k odsouhlasení během prvního přihlášení.
Na základě odpovědí na ně, jsou pak u zákazníka povolenz anebo nepovolenz určité služby a operace
s nimi spojené. Provozovatel systému může měnit nabídku těchto položek.

+ Request
    + Headers

            Accept:application/json
            Authorization: Bearer Abcd123456....


+ Response 200 (application/json)

    + Attributes (array[Seznam GDPR požadavků])
    + Body

            [
                {
                    "stateName":"GDPR příznak 1",
                    "stateDesc":"Použití e-mailovcé adresy v aplikaci",
                    "stateId":1
                },
                {
                    "stateName":"GDPR příznak 2",
                    "stateDesc":"Použití adresy v aplikaci",
                    "stateId":2
                },
                {
                    "stateName":"GDPR příznak 3",
                    "stateDesc":"Použití telefonního čísla v aplikaci",
                    "stateId":3
                }
            ]


## Moje GDPR příznaky [/api/v1/my/gdpr-states]

### Stav GDPR příznaků u zákazníka [GET]
Vrací nastavení GDPR příznaků aktuálního zákazníka

+ Request
    + Headers

            Accept:application/json




+ Response 200 (application/json)
    + Attributes (array[Stav GDPR příznaků u zákazníka])

    + Body

            [{"state":{"stateName":"GDPR příznak 1","stateDesc":"Použití e-mailovcé adresy v aplikaci","stateId":1},"value":true},{"state":{"stateName":"GDPR příznak 2","stateDesc":"Použití adresy v aplikaci","stateId":2},"value":true},{"state":{"stateName":"GDPR příznak 3","stateDesc":"Použití telefonního čísla v aplikaci","stateId":3},"value":false}]


### Nastavení GDPR příznaků zákazníka [POST]
Nastaví GDPR příznaky u daného zákazníka

+ Request (application/json)
    + Headers

            Accept:application/json

    + Attributes (Nastavení GDPR příznaků zákazníkaRequest)

    + Body

            [
                {
                    "state": {
                        "stateName": "GDPR příznak 1",
                        "stateDesc": "Použití e-mailovcé adresy v aplikaci",
                        "stateId": 1
                    },
                    "value": true
                },
                {
                    "state": {
                        "stateName": "GDPR příznak 2",
                        "stateDesc": "Použití adresy v aplikaci",
                        "stateId": 2
                    },
                    "value": true
                },
                {
                    "state": {
                        "stateName": "GDPR příznak 3",
                        "stateDesc": "Použití telefonního čísla v aplikaci",
                        "stateId": 3
                    },
                    "value": false
                }
            ]


+ Response 200 (application/json)
    + Attributes (Nastavení GDPR příznaků zákazníka)

    + Body

            {
                "firstName":"Martina",
                "lastName":"Kobylková",
                "phoneNo":"78657574",
                "eMail":"martin.kvicala@icloud.com",
                "idKey":"null",
                "extraOffersOn":false,
                "lastLoginDate":"\"2018-07-07T09:44:52.779+00:00\"",
                "createDate":"\"2015-11-12T12:37:46+00:00\"",
                "birthDate":"null",
                "passwordChangeDate":"null",
                "friendlyComposedName":"Martina Kobylková",
                "loginName":"null",
                "customerName":"null",
                "customerId":1878,
                "totalCustomerDisplayedCredit":2194500,
                "frontTitles":
                    [
                        {
                            "title":"BcA.",
                            "titleDesc":"bakalář umění",
                            "isAfterName":false
                        },
                        {
                            "title":"DiS.",
                            "titleDesc":"diplomovaný specialista",
                            "isAfterName":false
                        }
                    ],
                "afterTitles":
                    [
                        {
                            "title":"CSc.",
                            "titleDesc":"kandidát věd",
                            "isAfterName":true
                        },
                        {
                            "title":"Dr.h.c.",
                            "titleDesc":"čestný doktor",
                            "isAfterName":true
                        }
                    ],
                "status":true,
                "contactAddress":
                    {
                        "addressId":"50f20881-8c70-42bd-9263-da0c9125a58c",
                        "street":"Nová",
                        "streetNo":"124556",
                        "zipCode":"11111",
                        "site":"null",
                        "postSite":"Městecko",
                        "addressName":"null",
                        "country":"SK",
                        "friendlyComposedAddress":"Nová 124556, 11111 Městecko, CZE",
                        "shortFriendlyAddress":"Nová 124556, Městecko"
                    },
                "invoiceAddress":
                    {
                        "addressId":"767c2c52-8779-4d0a-8192-ec8ee3d8209e",
                        "street":"ulicka",
                        "streetNo":"2",
                        "zipCode":"67890",
                        "site":"null",
                        "postSite":"Místo",
                        "addressName":"null",
                        "country":"SK",
                        "friendlyComposedAddress":"ulicka 2, 67890 Místo, CZE",
                        "shortFriendlyAddress":"ulicka 2, Místo"
                        },
                    "isTestCustomer":true,
                    "workingPhoneNo":"78657574",
                    "privatePhoneNo":"6855675756",
                    "workingEMail":"martin.kvicala@icloud.com",
                    "privateEMail":"martin.kvicala@icloud.com",
                    "countryId":"null",
                    "allowsToUseCustomerApp":true
                }



# Group Zákaznická registrace

## Registrace [/api/v1/customer-registrations]

### Nová registrace [POST]

Založí záznam o registraci nového zákazníka

+ Request (application/json)
    + Headers

            Accept:application/json

    + Attributes

+ Response 200 (application/json)

### Seznam registrací [GET]

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer xhhgj...

+ Response 200 (application/json)

    + Attributes (array)
        - (RegistrationResponse)

# Data Structures

## OAuth grant request (object)

+ `grant_type`: `client_credentials` (string, required)
+ scope: `customer-access` (string, required)

## OAuth authorization code grant request (object)

+ `grant_type`: `authorization_code` (string, required)
+ scope: `customer-access` (string, required) - požadovaný přístup
+ code: `1234567890` (string, required) - autorizační kód
+ client_id: `Abcdef...xyz` - ID aplikace
+ `code_challenge` : `nejaky text` - text k ověření

## OAuth valid response (object)

+ `access_token`: `eyJhbGciOiJIUzI1NiJ9.e30.XmNK3GpH3Ys_7wsYBfq4C3M6goz71I7dTgUkuIa5lyQ` (string, required) - valid token
+ `refresh_token`: `eyJhbGciOiJIUzI1NiJ9.e30.XmNK3GpH3Ys_7wsYBfq4C3M6goz71I7dTgUkuIa5lyQ` (string, required) - refresh token
+ `expires_in`: 300 (number, required)
+ `token_type`: Bearer (string, required)

## Customer1 (object)

### Properties
+ firstName: `John` (string, required) - Jméno
+ lastName: `Doe (string, required) - Příjmení
+ phoneNo: `+420666123456` (string, required) - Základní telefon
+ eMail: `John.Doe@mail.com` (string, required) - Základní email
+ extraOffersOn: false (boolean) - Příznak, zda klient souhlasil s odesíláním zvláštních nabídek
+ lastLoginDate: `2015-08-05T08:40:51.620` (string) - Datum posledního přihlášení zákazníka do klientské zóny
+ createDate: `2015-08-05T08:40:51.620` (string) - Datum založeníní záznamu zákazníka
+ birthDate: 19600105 (number) - Datum narození
+ passwordChangeDate: `2015-08-05T08:40:51.620` (string) - Datum poslední změny hesla zákazníka
+ loginName: `johndoe` (string) - Alternativní přihlašovací jméno, pokud nevyplněno, pouižíva se eMail
+ frontTitles : `['Ing.']` (array[string]) - seznam titulů před jménem
+ afterTitles : `['CSc.']`  (array[string]) - seznam titulů za jménem

## Customer2 (object)

### Properties
+ firstName: `John` (string, required) - Jméno
+ lastName: `Doe (string, required) - Příjmení
+ phoneNo: `+420666123456` (string, required) - Základní telefon
+ eMail: `John.Doe@mail.com` (string, required) - Základní email
+ extraOffersOn: false (boolean) - Příznak, zda klient souhlasil s odesíláním zvláštních nabídek
+ lastLoginDate: `2015-08-05T08:40:51.620` (string) - Datum posledního přihlášení zákazníka do klientské zóny
+ createDate: `2015-08-05T08:40:51.620` (string) - Datum založeníní záznamu zákazníka
+ birthDate: 19600105 (number) - Datum narození
+ passwordChangeDate: `2015-08-05T08:40:51.620` (string) - Datum poslední změny hesla zákazníka
+ loginName: `johndoe` (string) - Alternativní přihlašovací jméno, pokud nevyplněno, pouižíva se eMail
+ frontTitles : `['Ing.']` (array[string]) - seznam titulů před jménem
+ afterTitles : `['CSc.']`  (array[string]) - seznam titulů za jménem

## Basket (object)


### Properties
+ `basketId`: `b4a51104-15a6-4aa7-bb87-808f7f188286` (string, required)
+ `items`: `[]` (array[string], required)
+ `createTime`: `5/21/2018 9:05:11 PM` (string, required)
+ `selectedDeliveryType`: '1' (string, required, nullable)
+ `isGift`: `false` (boolean, required)
+ `giftMessage`: null (string, required, nullable)
+ `billingAddress`: null (string, required, nullable)
+ `paymentInstrument`: null (string, required, nullable)
+ `confirmationUrl`: null (string, required, nullable)
+ `email`: null (string, required, nullable)
+ `shippingEmail`: null (string, required, nullable)
+ `shippingAddress`: null (string, required, nullable)
+ `cardId`: null (string, required, nullable)
+ `coupons`: null (string, required, nullable)
+ `saveAddress`: `false` (boolean, required)
+ `vat`: `0` (number, required)
+ `totalPrice`: `0` (number, required)
+ `availableDeliveryTypes`: `[]` (array[string], required)
+ `invoiceNo`: `aaa-bbb-1234` (string, optional) - Číslo fakturyˇ
+ `shipmentPrice`: `1000` (number, required) - Cena za doručení
+ `fiscalId`: null (string, optional) - ID pro systém EET
+ `coupons`: `[]` (array[BasketCoupon], optional) - Seznam elektronických kupónů, dodaných v rámci košíku

## BasketCoupon (object)

### Properties
+ `couponId`: `xxxxxx-zzzz...` (string, required) - UUID daného kupónu

## Obnova košíkuRequest (object)


### Properties
+ `availableDeliveryTypes`: `{}` (object, required)
+ `basketId`: `{{basketId}}` (string, required)
+ `billingAddress` (string, required, nullable)
+ `cardId` (string, required, nullable)
+ `confirmationUrl` (string, required, nullable)
+ `coupons` (string, required, nullable)
+ `createTime`: `5/20/2018 8:19:58 AM` (string, required)
+ `email` (string, required, nullable)
+ `giftMessage` (string, required, nullable)
+ `isGift`: `false` (boolean, required)
+ `items`: `false` (array[Item], required)
+ `paymentInstrument` (string, required, nullable)
+ `reductionCode` (string, required, nullable)
+ `reductionCodes`: `{}` (object, required)
+ `selectedDeliveryType` (string, required, nullable)
+ `shippingAddress` (string, required, nullable)
+ `shippingEmail` (string, required, nullable)
+ `totalPrice`: `200000` (number, required)
+ `vat`: `0` (number, required)


## Item (object)


### Properties
+ `canChangeVolume`: `true` (boolean, required)
+ `goodsItemItemId`: `108` (number, required)
+ `imagePath`: `http://127.0.0.1:8000/wardeneta/images/Goods/GoPrVoucher.png` (string, required)
+ `insertDate`: `5/20/2018 8:20:07 AM` (string, required)
+ `itemDesc`: `22 - Dárkový poukaz 2000 Kč nabití` (string, required)
+ `itemId`: `37a27a72-3180-49e2-8c4d-75137cdd18a6` (string, required)
+ `itemName`: `Dárkový poukaz 2000N` (string, required)
+ `itemType`: `goods` (string, required)
+ `price`: `200000` (number, required)
+ `total`: `200000` (number, required)
+ `totalVat`: `0` (number, required)
+ `vat`: `0` (number, required)
+ `volume`: `2` (number, required)


## Přidat zboží (object)

### Properties
+ `basketId`: `3b8022b3-7ead-4806-9aa1-7e059ae50a28` (string, required)
+ `items` (array[Item], required)
+ `createTime`: `2018-05-14T14:31:58.109+00:00` (string, required)
+ `selectedDelivery` (string, required, nullable)
+ `isGift`: `false` (boolean, required)
+ `giftMessage`: null (string, required, nullable)
+ `billingAddress`: null (string, required, nullable)
+ `paymentInstrument`: null (string, required, nullable)
+ `confirmationUrl` (string, required, nullable)
+ `email` (string, required, nullable)
+ `shippingEmail` (string, required, nullable)
+ `shippingAddress` (string, required, nullable)
+ `reductionCode` (string, required, nullable)
+ `cardId` (string, required, nullable)
+ `coupons` (string, required, nullable)
+ `availableDeliveryTypes`: `[]` (array[string], required)
+ `totalPrice`: `100000` (number, required)
+ `vat`: `0` (number, required)

## Přidat pronájem (object)


### Properties
+ `basketId`: `3b8022b3-7ead-4806-9aa1-7e059ae50a28` (string, required)
+ `items`: `3b8022b3-7ead-4806-9aa1-7e059ae50a28` (array[Item6], required)
+ `createTime`: `5/14/2018 2:36:05 PM` (string, required)
+ `selectedDelivery` (string, required, nullable)
+ `isGift`: `false` (boolean, required)
+ `giftMessage` (string, required, nullable)
+ `billingAddress` (string, required, nullable)
+ `paymentInstrument` (string, required, nullable)
+ `confirmationUrl` (string, required, nullable)
+ `email` (string, required, nullable)
+ `shippingEmail` (string, required, nullable)
+ `shippingAddress` (string, required, nullable)
+ `reductionCode` (string, required, nullable)
+ `cardId` (string, required, nullable)
+ `coupons` (string, required, nullable)
+ `availableDeliveryTypes`: `[]` (array[string], required)
+ `totalPrice`: `26250` (number, required)
+ `vat`: `0` (number, required)


## Item6 (object)


### Properties
+ `reservation` (Reservation, required)
+ `itemId`: `9cc25f4a-16af-42f6-8531-9fb74562f4ce` (string, required)
+ `volume`: `1` (number, required)
+ `insertDate`: `5/14/2018 2:36:05 PM` (string, required)
+ `canChangeVolume`: `false` (boolean, required)
+ `imagePath`: `http://127.0.0.1:8000/wardeneta/images/Goods/GoRent.png` (string, required)
+ `price`: `26250` (number, required)
+ `itemType`: `reservation` (string, required)
+ `itemDesc`: `Vířivka 14.05.2018 18:00-18:30` (string, required)
+ `totalVat`: `0` (number, required)
+ `total`: `26250` (number, required)
+ `itemName`: `Vířivka` (string, required)
+ `vat`: `0` (number, required)


## Reservation (object)


### Properties
+ `areaId`: `B762B784-2959-4725-B588-914B2C512307` (string, required)
+ `establishmentId`: `3` (number, required)
+ `time`: `5/14/2018 4:00:00 PM` (string, required)
+ `to`: `5/14/2018 4:30:00 PM` (string, required)


## Kupón 30201105 (object)


### Properties
+ `goodsItem` (GoodsItem, required)
+ `createTime`: `5/22/2018 12:12:43 PM` (string, required)
+ `expirationTime`: `8/20/2018 12:12:43 PM` (string, required)
+ `useTime` (string, required, nullable)
+ `couponId`: `bfb1e980-b796-4023-adea-292ad92d8bd2` (string, required)
+ `transactions`: `[]` (array[string], required)
+ `extraEmail` (string, required, nullable)
+ `couponValue` (string, required, nullable)
+ `serialNo`: `30201105` (string, required)
+ `customer`: `30201105` (Customer, required)


## GoodsItem (object)


### Properties
+ `$type`: `wagoods-items` (string, required)
+ `$id`: `107` (number, required)
+ `defaultPrice`: `100000` (number, required)
+ `itemId`: `107` (number, required)
+ `itemName`: `Dárkový poukaz 1000N` (string, required)
+ `wareMinLevel`: `0` (number, required)
+ `isRentable`: `false` (boolean, required)
+ `state`: `true` (boolean, required)
+ `itemDesc`: `22 - Dárkový poukaz 1000 Kč nabití` (string, required)
+ `earningLevel`: `0` (number, required)
+ `barCode`: `23000000030400` (string, required)


## Customer (object)


### Properties
+ `$type`: `wacustomers` (string, required)
+ `$id`: `1878` (number, required)
+ `passwordChangeDate` (string, required, nullable)
+ `lastName`: `Kobylková` (string, required)
+ `testFlag`: `N` (string, required)
+ `lastLoginDate`: `5/24/2018 2:47:37 PM` (string, required)
+ `birthDate` (string, required, nullable)
+ `countryId` (string, required, nullable)
+ `customerName` (string, required, nullable)
+ `firstName`: `Martina` (string, required)
+ `bankId`: `21331d36-92fc-11e5-832a-b14855d11b12` (string, required)
+ `idKey` (string, required, nullable)
+ `sexCode` (string, required, nullable)
+ `loginName` (string, required, nullable)
+ `customerId`: `1878` (number, required)
+ `position` (string, required, nullable)
+ `createDate`: `11/12/2015 1:37:46 PM` (string, required)
+ `status`: `true` (boolean, required)


## Obsazenost provozu s pronájmem (object)


### Properties
+ `date` : `2018-11-11` (string, required) - datum
+ `areaId`: `0001E2BB-9A59-483A-AB9F-CB2B070B8F66` (string, required) - ID zóny
+ `establishmentId`: `3` (number, required) - ID provozu
+ `areaName`: `Dráha 1` (string, required) - název zóny
+ `minimalReservationPeriod`: `30` (number, required)
nejkratší doba pronájmu (1 lekce)
+ `activities` (array[Activity], required)
seznam aktivit


## Activity (object)

### Properties
+ `validFrom`: `2018-06-03T06:30:00+02:00` (string, required)
čas začátku dané aktivity
+ `validTo`: `2018-06-03T18:00:00+02:00` (string, required)
čas konce dané aktivity
+ `isReservable`: `false` (boolean, required) - příznak, zda lze pronajmout pro soukromou aktivitu
+ `isReserved`: `false` (boolean, required)
příznak, zda je obsazeno soukromou aktivitou. Pokud *true* musí být nenulový prvek *reservation*
+ `isClosed`: `true` (boolean, required)
příznak, zda je provoz/zóna uzavřena
+ `isCustomerReservable`: `false` (boolean, required)
příznak, zda v dané zóně může soukromou aktivitu zadat přímo zákazník
+ `reservation` (Activity Reservation, optional, nullable) - detaily o soukromé aktivitě
+ `price`: `19000` (number, required) - cena za vstup do veřeiné aktivity. Platné pokud není obsazenou soukromou aktivitou.

## Activity Reservation (object)

### Properties
+ `reservationId`: `15649` (number, required)
ID kurzu
+ `itemNo`: `1`  (number, required)
ID lekce v rámci kurzu
+ `reservationName`: `Plavecká dráha` (string, optional, nullable)
+ `validFrom`: `2018-06-03T18:00:00+02:00` (string, required)
čas začátku dané lekce
+ `validTo`: `2018-06-03T18:30:00+02:00` (string, required)
čas konce dané lekce
+ `price`: `38000` (number, required)
+ `entryPrice`: `0` (number, required)
+ `acceptBooking`: `false` (boolean, required)
příznak, zda je možné se do dané aktivity přihlašovat. *False* pro uzavřené kurzy.
+ `activityName`: `null`  (string, optional, nullable)
volitelný popis aktivity, např. jóga, apod.
+ `instructorName`: `null`  (string, optional, nullable)
jméno instruktora, který povede danou lekci. Múže se lišit od instruktora, ketrý je
přiřazen pravidlelému běhu pronájmu (záskok)
+ `cardLimit`: `10`  (number, required) - maximální počet účastníků lekce/kurzu
+ `bookedCount`: `0`  (number, required) - počet do lekce/kurzu přihlášených uživatelů
+ `canAddBooking`: `true` (boolean, required)
*True* pokud se aktuální uživatel může přihlásit do aktivity.
+ `canRemoveBooking`: `false` (boolean, required)
příznak, zda se aktální uživatel může z dané lekce odhlásit. Podmínkz pro odhlášení jsou
dány organizačními pravidly dané organizace. Odhlásit je možné pouze z lekce, do které je
uživatel přihlášen.
+ `isCourse`: `false` (boolean, required)
příznak, zda se jedná o uzavrřený kurz, tedy pouze pro předem přihlášenou skupinu
účastníku, či zda se na jednotlivé lekce může pžihlásit jiný uživatel. Do kurzu se
uživatel zařadí koupí produktu (kurzovného), který je svázán s daným kurzem.
+ `isMyCourse`: `false` (boolean, optional)
příznak, zda aktuálně přihlášený uživatel je účastníkme uzavřeného kurzu. Má význam pouze pokud
atribut isCourse je true
+ `canCancel`: `false` (boolean, required)
*True* pokud aktuální uživatel může danou aktivitu ještě zrušit. Pravdila pro rušení jsou specifická
pro danou organizaci.
+ `canAddBookingCards`: `ee2058cc-dee4-11e8-b195-3f1dd4d19a90` (array[string], required)
+ `canRemoveBookingCards`: `ee2058cc-dee4-11e8-b195-3f1dd4d19a90` (array[string], required)
+ `hasBookingCards`: `ee2058cc-dee4-11e8-b195-3f1dd4d19a90` (array[string], required)
+ `firstCourseDate`: `2018-09-01` (string, optional) - datum první lekce daného kurzu
+ `lastCourseDate`: `2019-01-31` (string, optional) - datum poslední lekce daného kurzu

## Seznam GDPR požadavků (object)

### Properties
+ `stateName`: `GDPR příznak 1` (string, required)
+ `stateDesc`: `Použití e-mailovcé adresy v aplikaci` (string, required)
+ `stateId`: `1` (number, required)


## Stav GDPR příznaků u zákazníka (object)


### Properties
+ `state` (State, required)
+ `value`: `true` (boolean, required)


## State (object)


### Properties
+ `stateName`: `GDPR příznak 1` (string, required)
+ `stateDesc`: `Použití e-mailovcé adresy v aplikaci` (string, required)
+ `stateId`: `1` (number, required)


## Nastavení GDPR příznaků zákazníkaRequest (object)


### Properties
+ `state` (State, required)
+ `value`: `true` (boolean, required)


## Nastavení GDPR příznaků zákazníka (object)


### Properties
+ `firstName`: `Martina` (string, required)
+ `lastName`: `Kobylková` (string, required)
+ `phoneNo`: `78657574` (string, required)
+ `eMail`: `martin.kvicala@icloud.com` (string, required)
+ `idKey` (string, required, nullable)
+ `extraOffersOn`: `false` (boolean, required)
+ `lastLoginDate`: `7/7/2018 9:44:52 AM` (string, required)
+ `createDate`: `11/12/2015 12:37:46 PM` (string, required)
+ `birthDate` (string, required, nullable)
+ `passwordChangeDate` (string, required, nullable)
+ `friendlyComposedName`: `Martina Kobylková` (string, required)
+ `loginName` (string, required, nullable)
+ `customerName` (string, required, nullable)
+ `customerId`: `1878` (number, required)
+ `totalCustomerDisplayedCredit`: `2194500` (number, required)
+ `frontTitles`: `2194500` (array[FrontTitle], required)
+ `afterTitles`: `2194500` (array[AfterTitle], required)
+ `status`: `true` (boolean, required)
+ `contactAddress`: `true` (ContactAddress, required)
+ `invoiceAddress`: `true` (InvoiceAddress, required)
+ `isTestCustomer`: `true` (boolean, required)
+ `workingPhoneNo`: `78657574` (string, required)
+ `privatePhoneNo`: `6855675756` (string, required)
+ `workingEMail`: `martin.kvicala@icloud.com` (string, required)
+ `privateEMail`: `martin.kvicala@icloud.com` (string, required)
+ `countryId` (string, required, nullable)
+ `allowsToUseCustomerApp`: `true` (boolean, required)


## FrontTitle (object)


### Properties
+ `title`: `BcA.` (string, required)
+ `titleDesc`: `bakalář umění` (string, required)
+ `isAfterName`: `false` (boolean, required)


## AfterTitle (object)


### Properties
+ `title`: `CSc.` (string, required)
+ `titleDesc`: `kandidát věd` (string, required)
+ `isAfterName`: `true` (boolean, required)


## ContactAddress (object)


### Properties
+ `addressId`: `50f20881-8c70-42bd-9263-da0c9125a58c` (string, required)
+ `street`: `Nová` (string, required)
+ `streetNo`: `124556` (string, required)
+ `zipCode`: `11111` (string, required)
+ `site` (string, required, nullable)
+ `postSite`: `Městecko` (string, required)
+ `addressName` (string, required, nullable)
+ `country`: `SK` (string, required)
+ `friendlyComposedAddress`: `Nová 124556, 11111 Městecko, CZE` (string, required)
+ `shortFriendlyAddress`: `Nová 124556, Městecko` (string, required)


## InvoiceAddress (object)


### Properties
+ `addressId`: `767c2c52-8779-4d0a-8192-ec8ee3d8209e` (string, required)
+ `street`: `ulicka` (string, required)
+ `streetNo`: `2` (string, required)
+ `zipCode`: `67890` (string, required)
+ `site` (string, required, nullable)
+ `postSite`: `Místo` (string, required)
+ `addressName` (string, required, nullable)
+ `country`: `SK` (string, required)
+ `friendlyComposedAddress`: `ulicka 2, 67890 Místo, CZE` (string, required)
+ `shortFriendlyAddress`: `ulicka 2, Místo` (string, required)

## RegistrationResponse (object)

### Properties
+ registrationId: `767c2c52-8779-4d0a-8192-ec8ee3d8209e` (string, required) - Unikátní ID registrace

## Cards (array[Card])

## Card

### Properties
+ `cardId`: `767c2c52-8779-4d0a-8192-ec8ee3d8209e` (string, required) -  ID karty
+ `aliasName` : `Moje permanentka` (string, optional) - zákazníkovo pojmenování karty
+ `isActive` : `true` (boolean, required) - příznak, zda je daná karta aktivní
+ `isValid` : `true` (boolean, required) - příznak, zda má daná karta nějakou platnou službu
+ `blocked` : `false` (boolean, required) - příznak, zda je daná karta blokována pro použití
+ `canActivate` : `true` (boolean, required) - příznak, zda lze danou kartu aktivovat
+ `canBlock` : `true` (boolean, required) - příznak, zda lze u dané karty zablokovat její používání
+ `canCharge` : `true` (boolean, required) - příznak, zda lze na danou kartu dobít kredit
+ `canAddTicket` : `false` (boolean, required) - příznak, zda je možné k dané kartě dokoupit doplňkový vstup
+ `canMakeElectronicCopy` : `true` (boolean, required) - příznak, zda lze k dané kartě vytvořít e-kartu
+ `validFrom` : `2018-08-06T15:45:10+02:00` (string, required) - začátek platnosti karty
+ `validTo` : `2020-08-06T22:00:00+02:00` (string, required) - konec platnosti karty
+ `customerDisplayedCredit` : `25000` (number, required) - kredit dostupný zákazníkovi. Může být odlišný od
  skutečného kreditu. V haléřích.

## Card change

### Properties
+ `cardId`: `767c2c52-8779-4d0a-8192-ec8ee3d8209e` (string, required) -  ID karty
+ `aliasName` : `Moje permanentka` (string, optional) - zákazníkovo pojmenování karty

## Visits (array[Visit])

## Visit

### Properties
+ `visitId`: `767c2c52-8779-4d0a-8192-ec8ee3d8209e` (string, required) -  ID návštěvy
+ `cardId`: `767c2c52-8779-4d0a-8192-ec8ee3d8209e` (string, required) -  ID karty
+ `totalSum` : `10000` (number, required) - cena návštěvy. V haléřích.
+ `startTime` : `2018-08-09T15:45:10+02:00` (string, required) - začátek návštěvy
+ `endTime` : `2018-08-09T17:4'15:56+02:00` (string, required) - konec návštěvy. Null pokud návštěva
  ještě probíhá.