FORMAT: 1A
HOST: https://zakaznik.kravihora-brno.cz/wardeneta-api/ra

# Wardeneta - Klientská zóna v1

Popis API klientské zóny systému Wardeneta verze v1.

# Group Autentikace a autorizace

Pro přístup k API je nutná autentikace pomocí [OAuth 2.0](https://oauth.net/2/) protokolu.
Základní podmínkou pro správnou funkci autentikace a autorizace API je použití šifrovaného kanálu pomocí
[SSL(HTTPS)](https://tools.ietf.org/html/rfc6101) mechanismu.

<a name="my-anchor-token"></a>
## Token

Autentikační schéma používá `token`, který se předává pomocí HTTP headeru. Obsah tokenu
je znám pouze mezi serverem a klientem. Mimo tohto přístupového tokenu může server v určitých
případech vydat další token (*refresh_token*) umožňující prodloužení přístupového tokenu.

## OAuth 2.0

OAuth 2.0 je autorizační rámec, který poskytuje klientovi omezený přístup k API. Klient
iniciuje interaktivní proces, který vede k získání povolení pro přístup k danému zdroji.

## Typy (grant type)

Použitý `grant_type` určuje jaký postup vede k získání tokenu. Podporované typy jsou:

+ *Client credentials*:
Klient, typicky aplikace třetí strany, použije své důvěrné informace, které jsou mu předem bezpečně předány,
k získání tokenu. Klient je povinen tyto údaje bezpečně uložit a v případě jejich úniku je povinen
nechat tyto údaje zablokovat a vyžádat si nové.
+ *Password*:
Slouží k přímému přihlášení  uživatele pomocí svého ID a hesla. Tyto údaje nesmí být nikde uchovány a po
ukončení procesu autentikace by měly zaniknout v rámci aplikace. Tento typ není povolen aplikacím třetí strany.
Token získaný tímto způsobem lze prodloužit.
+ *Authorization code*:
Používá se režim přesměrování, kdy kód klienstké strany (a tedy i důvěrné údaje klienta)
zůstávají utajeny, tedy za druhým web serverem. V určitých případech je možné takto získaný token
prodloužit.
+ *Refresh token*:
Umožňuje prodloužit propadlý token.

## Použitá URL

Pro práci s tokenem se používají tyto typy URL

+ *Autorizační URL*:
Na toto URL je klient přesměrován, když potřebuje autorizovat uživatele. Uživatel se autentikuje
vůči službě a potvrdí povolení pro volající aplikaci k přístupu ke svým datům. Poté je přesměrovánám
zpět na návartové URL spolu s autorizačním kódem, který následně použije k [získání tokenu](#my-anchor-ac).

+ *Tokenové URL*:
Na tomto URL klient požádá o získání tokenu, který ho autentikuje a autorizuje ho k použití některých
služeb v zastoupení vlastníka zdroje.

## Scopes

*Scopes* umožňují dále zjemnit práva k danému zdroji. Klientská zóna rozlišuje tyto přístupy:
+ *customer_access*: slouží k přístupu konkrétního uživatele, který může vidět pouze *své* údaje
a případně obecné číselníky
+ *app_access*: slouží k přístupu z jiné, typicky serverové, důvěryhodné aplikace, obvykle třetí strany.
Aplikace má přístup k údajům různých zákazníků.
+ *guest_access*: slouží k anonymnímu  přistupu do API. Je určeno hlavně k ověření, že dotaz přícházi
 z ověřené aplikace, nicméně od neznámého uživatele.

## Autorizace uživatele [/api/v1/auth]

Slouží k ověření uživatele a povolení přístupu ze strany aplikaci třetí strany.

<a name="my-anchor-gac"></a>
### Získat autorizační kód [GET /api/v1/auth{?client_id,scope,redirect_uri,state,code_challenge_method,code_challenge}]

Akce vyvolá proces autorizace na autorizačním serveru. Pomocí návratového URL, předanému jako parametr volání
se pak získá autorizační kód potřebný pro [získání tokenu](#my-anchor-ac).

+ Request (application/json; charset=utf-8)

+ Parameters
  + `client_id` : `1234567890` (string,required) - ID aplikace, pro kterou se má
  proběhnout autentikace uživatele. Toto ID bude předem předáno druhé straně.
  + scope :  `app_access` (string,required) - požadované právo pro přístop ke zdroji
  + redirect_uri :  `https://www.example.com/fallback` (string,required) - URL, na které bude uživatel přesměrován po autentikaci. Pro dané
  *client_id* jsou definován apovolené hodnoty tohoto údaje.
  + state : `abc878787xz` (string,required)
  náhodná hodnota generovaná klientskou aplikací, která bude vrácena zpět při vyvolání *redirect_uri*. Klienstká aplikace by měla ověřit, že zpět dostala stejnou hodnotu, kterou poslala na autorizační server.
  + code_challenge_method : `S256` (string,required)
  určuje jaká metoda byla použita k získání nasledujícího údaje. Podporováné hodnoty jsou:
     + `S256` - SHA256
  + `code_challenge` : `qjrzSW9gMiUgpUvqgEPE4_-8swvyCtfOVvg55o5S_es` (string,required)
digitální hash v BASE64 náhodného textu. Tento text bude součásti požadavku o získání tokenu, viz níže.

+ Response 200 (text/html)
HTML stránka, na které proběhne vlastní ověření vůči službe.

      + Body


## Správa tokenu [/api/v1/oauth2/token]

Tyto zprávy slouží k získání a správě autentikačních ([tokenů](#my-anchor-token)).

<a name="my-anchor-get-token"></a>
### Získat token [POST /api/v1/oauth2/token]
Umožňuje získat token pomocí konkrétního autorizačního postupu.

+ Request Povoleno credentials (application/x-www-form-urlencoded; charset=utf-8)
<a name="my-anchor-cc"></a>
Požadavek na vystavení nového tokenu za pomocí postupu [Client Credentials Grant](https://oauth.net/2/grant-types/client-credentials/) za použití důvěrných informací. Pokud autentikaci vyvolává klienstká aplikace, musí tato zajistt bezpečné uložení důvěrných informací. Aplikace třetí strany musí
být certifikována pro použití tohoto postupu.

    + Attributes (OAuth grant request)

    + Headers

            Authorization: Basic ABCDEF

+ Response 200 (application/json)

    + Attributes (OAuth valid response)

+ Request Nepovoleno credentials (application/x-www-form-urlencoded; charset=utf-8)

    + Attributes (OAuth grant request)

    + Headers

            Authorization: Basic ABCDEF

+ Response 401

+ Request Povoleno heslo (application/x-www-form-urlencoded; charset=utf-8)
<a name="my-anchor-pwd"></a>
Požadavek na vystavení nového tokenu za pomocí postupu [Password Grant](https://oauth.net/2/grant-types/password/) za použití ID uživatele a hesla. Pokud autentikaci vyvolává klienstká aplikace, musí tato zajistit bezpečné získání důvěrných informací. Postup je určen pro interní aplikace. Aplikace třetí strany nmá k tomuto typu přístup.

    + Attributes (OAuth password request)

    + Headers

            Authorization: Basic ABCDEF

+ Response 200 (application/json)

    + Attributes (OAuth password valid response)

+ Request Nepovoleno heslo (application/x-www-form-urlencoded; charset=utf-8)

    + Attributes (OAuth password request)

    + Headers

            Authorization: Basic ABCDEF

+ Response 401

+ Request Povoleno obnova (application/x-www-form-urlencoded; charset=utf-8)
<a name="my-anchor-rt"></a>
Požadavek na obnovu tokenu za pomocí postupu [Refresh Token Grant](https://oauth.net/2/grant-types/refresh-token/) za použití údaje k obnově tokenu. Tento údaj musí klientská aplikace velmi bezpeečně uložit  a pokud dojd ek jeho úniku, musí vyvolat akci vedoucí k zneplatnění tokenu..

    + Attributes (OAuth refresh request)

    + Headers

            Authorization: Basic ABCDEF

+ Response 200 (application/json)

    + Attributes (OAuth password valid response)

+ Request Nepovoleno obnova (application/x-www-form-urlencoded; charset=utf-8)

    + Attributes (OAuth refresh request)

    + Headers

            Authorization: Basic ABCDEF

+ Response 401

+ Request Povoleno kód (application/x-www-form-urlencoded; charset=utf-8)
<a name="my-anchor-ac"></a>
Požadavek na vystavení nového tokenu za pomocí postupu [Authorization Code Grant](https://oauth.net/2/grant-types/authorization-code/). Autorizační kód byl získán z předešlého volání [Získání autorizačního kódu](#my-anchor-gac).
Postup je určen pro použití z aplikace třetí strany.

    + Attributes (OAuth authorization code grant request)

    + Headers

            Authorization: Basic ABCDEF

+ Response 200 (application/json)

    + Attributes (OAuth valid response)

+ Request Nepovoleno kód (application/x-www-form-urlencoded; charset=utf-8)

    + Attributes (OAuth authorization code grant request)

    + Headers

            Authorization: Basic ABCDEF

+ Response 401

### Zrušit token [DELETE]

Umožňuje zrušit/zneaktivnit existující token.

+ Request (application/x-www-form-urlencoded; charset=utf-8)

+ Response 204


# Group Číselníky

Zde popsané služby umožňují přístup k různým čísleníkům, které jsou používány obecně v rámci ostatních služeb.
Vůči koncovému uživatli mohou být použity např. k naplnění výběrového seznamu, apod.

<a name="person-titles" ></a>
## Tituly [/api/v1/titles{?before,after}]

+ Parameters
    - before: 'false' (string, optional) - pokud false vynechá tituly používané před jménem
    - after: 'false' (string, optional) - pokud false vynechá tituly používané za jménem

### Seznam titulů [GET]
Vrátí seznam dostupných titulů. Jejich hodnoty se používají k plnění titulů např. v ([registračním formuláři](#registration-form)).

+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer ABCDEF...

+ Response 200 (application/json)

    + Attributes  (Titles)


## Zdravotní pojišťovny [/api/v1/health-insurance-companies]
<a name="health-insurance-companies" ></a>

### Seznam zdravotních pojišťoven [GET]
Vrátí seznam dostupných zdravotních pojišťoven. Jejich hodnoty se používají k plnění např. v ([registračním formuláři](#registration-form)).

+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer ABCDEF...

+ Response 200 (application/json)

    + Attributes  (HealthInsuranceCompanies)



# Group Zákazník

## Aktuální zákazník [/api/v1/customers/myself]
Správa údajů o zákazníkovi, který je akuálně přihlašen (vlastní `access_token`).

### Zobrazit detail [GET]
Vrátí detail aktuálního zákazníka

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer ABCDEF...

+ Response 200 (application/json)
    + Attributes (Customer1)

### Změnit detail [PUT]
Přestaví údaje u aktuálního zákazníka

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: Bearer ABCDEF...

    + Attributes (Customer2)

+ Response 200 (application/json)
    + Attributes (Customer1)

## Zákazník s daným ID [/api/v1/customers/{customer_id}]
Správa údajů o zákazníkovi s daným identifikátorem. Dostupné pouze s  odpovídajcím oprávněním.

+ Parameters
    + customer_id : `1234567890` (number) - ID zákazníka

### Zobrazit detail [GET]
Vrátí detail daného zákazníka

+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer ABCDEF...

+ Response 200 (application/json)
    + Attributes (Customer1)

### Změnit detail [PUT]
Přestaví údaje u daného zákazníka

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer ABCDEF...

    + Attributes (Customer2)

+ Response 200 (application/json)
    + Attributes (Customer1)

# Group Karty

## Karty aktuálního zákazníka [/api/v1/customers/myself/cards]
Správa údajů o kartách patřících zákazníkovi, který je akuálně přihlašen (vlastní `access_token`).

### Zobrazit seznam [GET /api/v1/customers/myself/cards{?inactive}]
Vrátí seznam karet aktuálního zákazníka

+ Parameters
    + `inactive` : `true` (boolean,required) - příznak umožňující vrátit v seznamu i neaktivní karty.
                    Default vrací pouze aktivní.


+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer ABCDEF...

+ Response 200 (application/json)
    + Attributes (Cards)

## Karta podle ID [/api/v1/customers/myself/cards/{cardId}]
Správa údajů o kartě patřící zákazníkovi, který je akuálně přihlašen (vlastní `access_token`).

+ Parameters
    + `cardId` : `767c2c52-8779-4d0a-8192-ec8ee3d8209e` (string,required) - ID karty

### Zobrazit záznam [GET]
Vrátí objekt karty pro dané ID

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer ABCDEF...

+ Response 200 (application/json)
    + Attributes (Card)

### Upravit údaje [PUT]

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: Bearer ABCDEF...

    + Attributes (CardChange)

+ Response 200 (application/json)

    Údaje úspěšně upraveny.

    + Attributes (Card)

### Odblokovat [PUT /api/v1/customers/myself/cards/{cardId}/unblock]

+ Request Úspěšné odblokování
    + Headers

            Accept: application/json
            Authorization: Bearer ABCDEF...

+ Response 200 (application/json)

    + Attributes (Card)

+ Request Karta s tímto ID nenalezena
    + Headers

            Accept: application/json
            Authorization: Bearer ABCDEF...

+ Response 404

+ Request Kartu s tímto ID nelze odblokovat
    + Headers

            Accept: application/json
            Authorization: Bearer ABCDEF...

+ Response 409

### Zablokovat [PUT /api/v1/customers/myself/cards/{cardId}/block]

+ Request  Úspěšné zablokování
    + Headers

            Accept: application/json
            Authorization: Bearer ABCDEF...

+ Response 200 (application/json)

    + Attributes (Card)

+ Request  Karta s tímto ID nenalezena

    + Headers

            Accept: application/json
            Authorization: Bearer ABCDEF...

+ Response 404

+ Request  Kartu s tímto ID nelze zablokovat

    + Headers

            Accept: application/json
            Authorization: Bearer ABCDEF...

+ Response 409

# Group Návštěvy

## Návštěvy aktuálního zákazníka [/api/v1/customers/myself/visits]
Informace o návštěvách provedených zákazníkem, který je akuálně přihlašen (vlastní `access_token`),
anebo na vstupenky jím pořízených.

### Zobrazit seznam [GET]
Vrátí seznam návštěv aktuálního zákazníka

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer ABCDEF...

+ Response 200 (application/json)
    + Attributes (Visits)

# Group Objednávky

## Objednávky aktuálního zákazníka [/api/v1/customers/myself/orders]
Informace o objednávkách provedených zákazníkem, který je akuálně přihlašen (vlastní `access_token`).

### Zobrazit seznam [GET]
Vrátí seznam objednávek aktuálního zákazníka

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer ABCDEF...

+ Response 200 (application/json)
    + Attributes (Orders)

## Objednávka dle ID [/api/v1/customers/myself/orders/{orderId}]

+ Parameters
    + orderId: `ABCD-...` (string, required) - ID objednávky

### Zobrazit záznam [GET]
Vrátí objednávku s daným ID aktuálního zákazníka

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer ABCDEF...

+ Response 200 (application/json)
    + Attributes (Order)

### Faktura  [GET /api/v1/customers/myself/orders/{orderId}/invoice]
Vrátí PDF fakturu pro objednávku s daným ID.

+ Request

    + Headers

            Authorization: Bearer 874887d6ecd0b106a47448c5beca1
            Accept: application/pdf

+ Response 200 (application/pdf)

### Odeslání  [GET /api/v1/customers/myself/orders/{orderId}/email]
Odešle obsah objednávky s daným ID na email obejdnávky.

+ Request

    + Headers

            Authorization: Bearer 874887d6ecd0b106a47448c5beca1

+ Response 204

# Group Zboží

Představuje položky, které je možné vložit do [košíku](#my-anchor-basket).

## Dostupné zboží [/api/v1/my/institutions/sellable-items]

### Seznam [GET]

+ Request

    + Headers

            Authorization: Bearer 874887d6ecd0b106a47448c5beca1
            Accept: application/json

+ Response 200 (application/json)

    + Attributes (array[SellableItem])


# Group Nákupní košík
<a name="my-anchor-basket"></a>
Umožňuje provést online nákup v e-shopu provozovatele. Nákupní košík uchovává aktuální
stav prováděného nákupu v e-shopu. Zároveň umožňuje
provedení dalších operací vedoucích k jeho naplnění, nastavení a následnému zaplacení.

## Můj nákupního košíku [/api/v1/baskets]

### Můj košík [GET]

Vrátí nakupní košík aktuálního zákazníka (dle autentikačního tokenu).

+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer 874887d6ecd0b106a47448c5beca1

+ Response 200 (application/json)

    + Attributes (Basket)


## Košík dle ID [/api/v1/baskets/{basketId}]

+ Parameters

    + basketId: `ABCD-...` (string, required) - ID košíku

### Záznam košíku [GET]

Vrátí nakupní košík s daným ID.

+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer 874887d6ecd0b106a47448c5beca1

+ Response 200 (application/json)

    + Attributes (Basket)

### Obnovit košík [PUT]
Umožňuje synchronizovat stav a obsah košíku se serverem.

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer 874887d6ecd0b106a47448c5beca1

    + Attributes (Change Basket)

+ Response 200 (application/json)

    + Attributes (Basket)

### Přidat položku [PUT /api/v1/baskets/{basketId}/new-items]
Umožňuje přidat 1 nebo více položek košíku

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: Bearer 874887d6ecd0b106a47448c5beca1

    + Attributes (BasketNewItems)

+ Response 200 (application/json)

    + Attributes (Basket)

### Odstranit položku z košíku [DELETE /api/v1/baskets/{basketId}/items/{itemId}]
Umožňuje odstranit danou položku z nákupního košíku

+ Parameters

    + itemId: `123` (string, required)

+ Request (application/json)

    + Headers

            Accept:application/json
            Authorization: Bearer 874887d6ecd0b106a47448c5beca1

+ Response 200 (application/json)

    + Attributes (Basket)

### Vysypat košík [DELETE /api/v1/baskets/{basketId}/items]
Umožňuje odstranit všechny položky z nákupního košíku

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer 874887d6ecd0b106a47448c5beca1

    + Attributes (ClearBasket)

+ Response 200 (application/json)

    + Attributes (Basket)

### Zaplatit košík [PUT /api/v1/baskets/{basketId}/payments]
Umožňuje zaplatit za nákupního košíku

+ Request (application/json)

    + Headers

            Accept:application/json
            Authorization: Bearer 874887d6ecd0b106a47448c5beca1

    + Attributes (Basket)

+ Response 200 (application/json)

    + Attributes (BasketPayment)

### Odstranit slevový kupón [DELETE /api/v1/baskets/{basketId}/coupons/{couponId}]
Odstraní kupón s daným ID ze seznamu slev pro daný košík.

+ Parameters

    + couponId: `XYZ...` (string, required) - ID kupónu, který má být odebrán

+ Request (application/json)

    + Headers

            Accept:application/json
            Authorization: Bearer 874887d6ecd0b106a47448c5beca1

    + Attributes (MinimalBasket)

+ Response 200 (application/json)

    + Attributes (Basket)

+ Response 404

        Kupón s daným ID není přiřazen mezi slevami pro daný košík

+ Response 400

        ID košíku v URL neodpovídá ID košíku v těle zpávy

# Group Kupóny

## Kupón dle ID [/api/v1/my/institutions/coupons/{couponId}]

+ Parameters

    + couponId: `ABCDEF...` (string, required)

### Kupón podle ID [GET]
Vrátí informaci o daném slevovém kupónu.

+ Request

    + Headers

            Accept:application/json

+ Response 200 (application/json)

    + Attributes (Coupon)

# Group Pronájmy

## Obsazenost daného provozu [/api/v1/my/institutions/establishments/{establishmentId}/occupancies/{occupancyDate}/{?days}]

+ Parameters

    + establishmentId: `2` (string, required) - ID provozu
    + occupancyDate: `2018-07-31` (string, required) - den počátku výpisu
    + days: `7` (number, optional) - počet dnů, pro které se má vrátit seznam obsazenosti

### Obsazenost provozu [GET]
Vrací obsazenost daného provozu v daný den. Provoz se dělí do zón. Každá zóna má samostatné nastavení
obsazenosti.
V rámci dne se může vyskytovat několik druhů aktivit/stavů, případně může být provoz uzavřen. Příznaky aktivity
určují dostupné operace nad danou aktivitou. Aktuálně vyskytující se aktivity jsou:
+ `Zavřeno` - provoz/zóna je momentálně uzavřena
+ `Otevřeno bez možnosti pronájmu` - otevřeno pro veřejné aktivity, nelze vložit soukromý pronájem
+ `Otevřeno s možností pronájmu` - otevřeno pro veřejné aktivity, je možné soukromně pronajmout
+ `Obsazeno - uzavřená lekce` - pronajmuto kurzem, do kterého není možné dodatečně vstoupit
+ `Obsazeno - otevřená lekce` . prnajmuto aktivitou, u které je možné se nahlásit do jednotlivé lekce

+ Request (application/json)
    + Headers

            Accept:application/json

+ Response 200 (application/json)
    + Attributes (array[Obsazenost provozu s pronájmem])



## Pronájem dle ID [/api/v1/my/institutions/reservations/{reservationId}]

+ Parameters
    + reservationId: `12345` (string, required)


### Pronájem podle ID [GET]
Vrátí pronájem s daným ID

+ Request

    + Headers

            Accept:application/json

+ Response 200

# Group Obecné

## Soubor dle ID [/api/v1/my/institutions/files/{fileId}]

+ Parameters
    + fileId: `123456` (string, required)


### Obsah souboru [GET]
Vrátí obsah souboru

+ Request

    + Headers

            Accept:application/octet-stream

+ Response 200

## Návštěvnost [/api/v1/my/institutions/attendences]

Služba umožňuje sledovat aktuální návštěvnost jednotlivých provozů.

###  Seznam všech aktuálních návštěvností [GET]

Vrací seznam objektů s hodnotami návštěvnosti ve všech provozech daného provozovatele systému.
+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer ABCDEF...

+ Response 200 (application/json)

    + Attributes (Attendences)

### Aktuální návštěvnost daného provozu [GET /api/v1/my/institutions/establishments/{establishmentId}/attendences]

+ Parameters

    + establishmentId: `2` (number, required) - ID provozu

+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer ABCDEF...


+ Response 200 (application/json)

    + Attributes (Attendence)


## Teploty [/api/v1/my/institutions/temperatures]

### Seznam teplot pro všechny měřená čidla [GET]

+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer ABCDEF...

+ Response 200 (application/json)

    + Attributes (Temperatures)

### Teplota pro dané čidlo [GET /api/v1/my/institutions/temperatures/{itemName}]

+ Parameters

    + itemName: `TEMP_V_B1` (string, required) - ID čidla

+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer ABCDEF...

+ Response 200 (application/json)

    + Attributes (Temperature)

## Přehled aktivit [/api/v1/my/institutions/time-tables/{date}{?days,locality,esatblishment,area}]

Denní snímek aktivit je přehled stavů v jakých se vyskytuje daná zóna běheme konkretního dne. Zóna může být ve dvou
základních stavech:

* otevřená
* zavřená

Otevřená zóna pak může nabývat několika stavů. Tyto stavy popisují, zda je zóna volně dostupná, anebo v ní porbíhá
předem nahlášená aktivita (**kurz** nebo **lekce**). Rozdíl mezi kurzem a lekcí je v tom, že kurz je otevřen pouze
pro stálou skupinu účastníků, do lekce se pak účastnící nahlašují jednorázově anebo přicházejí bez nahlášení.
Obvykle probíhá kurz či lekce v pravidelných intrevalech (např. každé úterý od 16:00 hodin).

Dále je možné omezit zónu pouze pro předem nahlášené aktivity, tedy neumožnit volný vstup zákazníkům do zóny mimo
tyto aktivity.

Obykle má provoz pravidelnou otvírací dobu, ale je možné celý nebo část provozu _mimořádně_ dočasně uzavřít nebo otevřít,
např. v případě opravy, závodů, apod. Informace o typu mimořadné situace je možné přenést v rámci snímku
aktivit.

+ Parameters
    + `date`: `2018-11-11` (date,required) - Datum počátku snímku.
    + `days`: `7` (number,optional) - Počet dnů pro snímek. Pokdu není uvedeno, vrací snímek pro jeden den.
        Maximální hodnota je 7 dnů.
    + `locality`: `2` (number,optional) - ID lokality, pro kterou je plán generován.
    + `esatblishment`: `5` (number,optional) - ID provozu, pro který je plán generován .
    + `area`: `2e5a2935-7a9a-4158-b11e-74f1a09ec603` (string,optional) - ID zóny, pro kterou je plán generován.

### Seznam aktivit pro daný den nebo interval dnů [GET]

Služba je určena k zobrazení denního snímku aktivit v daném provozu pro daný den nebo několik dnů. Seznam je
možné omezit na danou lokalitu, provoz nebo zónu.


+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer ABCDEF...

+ Response 200 (application/json)

    + Attributes (TimeTableResponse)


# Group GDPR

## GDPR příznaky [/api/v1/gdpr-states]

### Seznam GDPR požadavků [GET]
Vrátí seznam položek, které jsou zákazníkovi nabídnty k odsouhlasení během prvního přihlášení.
Na základě odpovědí na ně, jsou pak u zákazníka povolenz anebo nepovolenz určité služby a operace
s nimi spojené. Provozovatel systému může měnit nabídku těchto položek.

+ Request
    + Headers

            Accept:application/json
            Authorization: Bearer Abcd123456....


+ Response 200 (application/json)

    + Attributes (array[GDPRItem])

## Moje GDPR příznaky [/api/v1/my/gdpr-states]

### Stav GDPR příznaků u zákazníka [GET]
Vrací nastavení GDPR příznaků aktuálního zákazníka

+ Request

    + Headers

            Accept:application/json


+ Response 200 (application/json)

    + Attributes (array[GDPRCustomerItem])

    + Body

            [{"state":{"stateName":"GDPR příznak 1","stateDesc":"Použití e-mailovcé adresy v aplikaci","stateId":1},"value":true},{"state":{"stateName":"GDPR příznak 2","stateDesc":"Použití adresy v aplikaci","stateId":2},"value":true},{"state":{"stateName":"GDPR příznak 3","stateDesc":"Použití telefonního čísla v aplikaci","stateId":3},"value":false}]


### Nastavení GDPR příznaků zákazníka [POST]
Nastaví GDPR příznaky u daného zákazníka

+ Request (application/json)

    + Headers

            Accept:application/json

    + Attributes (array[GDPRCustomerItemRequest])
    + Body

            [
                {
                    "state": {
                        "stateName": "GDPR příznak 1",
                        "stateDesc": "Použití e-mailovcé adresy v aplikaci",
                        "stateId": 1
                    },
                    "value": true
                },
                {
                    "state": {
                        "stateName": "GDPR příznak 2",
                        "stateDesc": "Použití adresy v aplikaci",
                        "stateId": 2
                    },
                    "value": true
                },
                {
                    "state": {
                        "stateName": "GDPR příznak 3",
                        "stateDesc": "Použití telefonního čísla v aplikaci",
                        "stateId": 3
                    },
                    "value": false
                }
            ]


+ Response 200 (application/json)

    + Attributes (GDPRCustomer)
    + Body

            {
                "firstName":"Martina",
                "lastName":"Kobylková",
                "phoneNo":"78657574",
                "eMail":"martin.kvicala@icloud.com",
                "idKey":"null",
                "extraOffersOn":false,
                "lastLoginDate":"\"2018-07-07T09:44:52.779+00:00\"",
                "createDate":"\"2015-11-12T12:37:46+00:00\"",
                "birthDate":"null",
                "passwordChangeDate":"null",
                "friendlyComposedName":"Martina Kobylková",
                "loginName":"null",
                "customerName":"null",
                "customerId":1878,
                "totalCustomerDisplayedCredit":2194500,
                "frontTitles":
                    [
                        {
                            "title":"BcA.",
                            "titleDesc":"bakalář umění",
                            "isAfterName":false
                        },
                        {
                            "title":"DiS.",
                            "titleDesc":"diplomovaný specialista",
                            "isAfterName":false
                        }
                    ],
                "afterTitles":
                    [
                        {
                            "title":"CSc.",
                            "titleDesc":"kandidát věd",
                            "isAfterName":true
                        },
                        {
                            "title":"Dr.h.c.",
                            "titleDesc":"čestný doktor",
                            "isAfterName":true
                        }
                    ],
                "status":true,
                "contactAddress":
                    {
                        "addressId":"50f20881-8c70-42bd-9263-da0c9125a58c",
                        "street":"Nová",
                        "streetNo":"124556",
                        "zipCode":"11111",
                        "site":"null",
                        "postSite":"Městecko",
                        "addressName":"null",
                        "country":"SK",
                        "friendlyComposedAddress":"Nová 124556, 11111 Městecko, CZE",
                        "shortFriendlyAddress":"Nová 124556, Městecko"
                    },
                "invoiceAddress":
                    {
                        "addressId":"767c2c52-8779-4d0a-8192-ec8ee3d8209e",
                        "street":"ulicka",
                        "streetNo":"2",
                        "zipCode":"67890",
                        "site":"null",
                        "postSite":"Místo",
                        "addressName":"null",
                        "country":"SK",
                        "friendlyComposedAddress":"ulicka 2, 67890 Místo, CZE",
                        "shortFriendlyAddress":"ulicka 2, Místo"
                        },
                    "isTestCustomer":true,
                    "workingPhoneNo":"78657574",
                    "privatePhoneNo":"6855675756",
                    "workingEMail":"martin.kvicala@icloud.com",
                    "privateEMail":"martin.kvicala@icloud.com",
                    "countryId":"null",
                    "allowsToUseCustomerApp":true
                }



# Group Registrace členství

Využití některých služeb je podmíněno zařazením evidovaného zákazníka do členského programu. Aby se
zákazník mohl tyto služby využit, musí vyplnit registrační fomulář. Ten obsahuje jednak obecne údaje,
např. jméno a příjmení, kontaktní údaje, a potom sadu volitelných otázek, jejichž obsah si určí
provozovatel dle svých potřeb. Registrační formulář může obsahovat i sekci s podmínkami, které musi
zákazník odsouhlasit, aby mohl o členství požádat.

Konečný způsob schválení členství je volitelný dle nastavení provozovatele. MÚže se např. vyžadovat
následný podpis dokumentů.

## Definice registračního formuláře [/api/v1/customer-registration-definitions]

Definice registračního formuláře umožňuje sestavit volitelnou část tohoto formuláře, která vychází
z potřeb provozovatele. Definice obsahuje seznam vyžadovaných dotazů a povolené možnosti odpovědí
na ně.

### Seznam definicí  [GET]
Vrátí seznam definicí, z kterých se sestaví registrační fomulář. Formulář má 2 části
* otázky - seznam otázek, které musí zákazník vyplnit, aby registrace byla platná
* texty - seznam informačních textů, odkazů, případně potvrzujících podmínek

Další části definice je seznam povinných polí. Provozovatel může sám rozhodnout, která pole pevné části
formuláře jsou povinná.

+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer ABCDEF...

+ Response 200 (application/json)

    + Attributes (RegistrationFormDefinition)

+ Response 401

## Registrace [/api/v1/customer-registrations]
Správa údajů o provedených registracích.

<a name="registration-form" />
### Nová registrace [POST]

Založí záznam o registraci nového zákazníka

+ Request (application/json)

    + Headers

            Accept:application/json

    + Attributes (RegistrationRequest)

+ Response 201 (application/json)

    + Attributes (RegistrationResponse)

### Seznam registrací [GET /api/v1/customer-registrations{?birthdate,surname,firstname}]
Vrátí seznam existujících registrací.

+ Parameters

  + birthdate: `19600105` (number, required) - datum narození
  + surname: `Doe` (string, required) - příjmení
  + firstname: `John` (string, required) - jméno

+ Request (application/json)
    + Headers

            Accept:application/json
            Authorization: Bearer xhhgj...

+ Response 200 (application/json)

    + Attributes (RegistrationResponses)

# Group Členství

## Členské karty [/api/v1/my/institutions/cards]
Správa údajů o vydaných členských kartách.

### Seznam karet [GET /api/v1/my/institutions/cards{?card_no}]
Vrátí seznam existujících členských karet.

+ Parameters
    + `card_no`: `123456` (string, optional) - číslo na kartě


+ Request (application/json)
    + Headers

            Accept:application/json
            Authorization: Bearer xhhgj...


+ Response 200 (application/json)

    + Attributes (Card)

# Group Externí aplikace

API umožnuje přístup k zákaznickým údajům i z dalších aplikací třetích stran. Aplikace musí být
nakonfigurovány v rámci systému a zákazník musí povolit přístup ke svým datům z dané aplikace.

## Definované externí aplikace [/api/v1/approvable-apps]

Umožňuje zkontrolovat, zda daná aplikace je definovaná v rámci systému a je možné ji použít.

### Seznam aplikací [GET]
Vrátí seznam všech existujícících aplikací třetích stran, které mají nebo měly přístup k  API.

+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer xhhgj...

+ Response 200 (application/json)

    + Attributes (array[ApprovableApp])

### Záznam o aplikaci [GET /api/v1/approvable-apps/{appId}]
Vrátí existujícící aplikaci třetí strany, které má nebo měla přístup k  API, s daným ID.

+ Parameters

  + `appId`: `APP-ID-AS-UUID` (string, required) - ID aplikace

+ Request OK
Aplikace s daným ID nalezena.

    + Headers

            Accept: application/json
            Authorization: Bearer xhhgj...

+ Response 200 (application/json)

    + Attributes (ApprovableApp)


+ Request Nenalezena
Aplikace s daným ID neexistuje.

    + Headers

            Accept: application/json
            Authorization: Bearer xhhgj...

+ Response 404


## Schválené přístupy k aplikacím [/api/v1/customers/myself/app-approvals]
Umožňuje spravovat přístupy k externím aplikacím pro aktuálního zákazníka.

### Seznam přístupů k externím aplikacím [GET]
Vrátí seznam externích aplikací, jejichž použití schválil aktuální zákazník. Požadavek na
schválení externí aplikace je popsán [zde](#my-anchor-gac). Vyvolá ho externí aplikace, která je tímto požadavkem přesměrována na autorizační server. Po schválení přístupu je pomocí návratového URL
zákazník vrácen zpět do externí aplikace.

+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer xhhgj...

+ Response 200 (application/json)

    + Attributes (array[ApprovedAppResponse])

### Přidat přístup k externí aplikaci [POST]
Přidá záznam o schválení použitelnosti dané externí aplikace aktuálním zákazníkem.

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer xhhgj...

    + Attributes (ApprovedApp)

+ Response 200 (application/json)

    + Attributes (ApprovedAppResponse)

### Upravit přístup k externí aplikaci [PUT/api/v1/customers/myself/app-approvals/{appId}]
Změní záznam o schválení použitelnosti dané externí aplikace aktuálním zákazníkem.

+ Parameters

  + `appId`: `APP-ID-AS-UUID` (string, required) - ID aplikace

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer xhhgj...

    + Attributes (ApprovedApp)

+ Response 200 (application/json)

    + Attributes (ApprovedAppResponse)


### Odstranit přístup k externí aplikace [DELETE /api/v1/customers/myself/app-approvals/{appId}]
Odstraní záznam o schválení použitelnosti dané externí aplikace aktuálním zákazníkem.

+ Parameters

  + `appId`: `APP-ID-AS-UUID` (string, required) - ID aplikace

+ Request OK

    + Headers

            Accept: application/json
            Authorization: Bearer xhhgj...

+ Response 204

+ Request Nenalezena

    + Headers

            Accept: application/json
            Authorization: Bearer xhhgj...

+ Response 404

# Data Structures

## OAuth grant request (object)

+ `grant_type`: `client_credentials` (string, required)
+ scope: `customer-access` (string, required)
+ client_id: `Abcdef...xyz` (string, optional)
ID aplikace, pokud není zde musí být v headeru *Authorization*.
+ `client_secret`: `Abcdef...123` (string, optional)
tajný údaj aplikace, pokud není zde musí být v headeru *Authorization*.

## OAuth password request (object)

+ `grant_type`: `password` (string, required)
+ scope: `customer-access` (string, required)
+ `username`: `john.doe` (string, required)
+ `password`: `my-password-123` (string, required)
+ `client_id`: `Abcdef...xyz` (string, optional)
ID aplikace, nepovinné pro tento typ. Alternativně může být v headeru *Authorization*.
+ `client_secret`: `Abcdef...123` (string, optional)
tajný údaj aplikace, nepovinné pro tento typ. Alternativně může být v headeru *Authorization*.


## OAuth refresh request (object)

+ `grant_type`: `refresh_token` (string, required)
+ scope: `customer-access` (string, required)
+ `refresh_token`: `eyJhbGciOiJIUzI1NiJ9.e30.XmNK3GpH3Ys_7wsYBfq4C3M6goz71I7dTgUkuIa5lyQ` (string, required) - refresh token

## OAuth authorization code grant request (object)

+ `grant_type`: `authorization_code` (string, required)
+ scope: `customer-access` (string, required) - požadovaný přístup
+ code: `1234567890` (string, required) - autorizační kód
+ client_id: `Abcdef...xyz` (string, optional) - ID aplikace
+ `client_secret`: `Abcdef...123` (string, optional) - tajný údaj aplikace
+ `code_challenge` : `nejaky text` - text k ověření

## OAuth valid response (object)

+ `access_token`: `eyJhbGciOiJIUzI1NiJ9.e30.XmNK3GpH3Ys_7wsYBfq4C3M6goz71I7dTgUkuIa5lyQ` (string, required) - valid token
+ `expires_in`: 300 (number, required)
+ `token_type`: Bearer (string, required)

## OAuth password valid response (object)

+ `access_token`: `eyJhbGciOiJIUzI1NiJ9.e30.XmNK3GpH3Ys_7wsYBfq4C3M6goz71I7dTgUkuIa5lyQ` (string, required) - valid token
+ `refresh_token`: `eyJhbGciOiJIUzI1NiJ9.e30.XmNK3GpH3Ys_7wsYBfq4C3M6goz71I7dTgUkuIa5lyQ` (string, required) - refresh token
+ `expires_in`: 300 (number, required)
+ `token_type`: Bearer (string, required)

## CustomerTitle (object)

### Properties
+ `title`: `Ing.` (string, required) - titul

## CustomerAfterTitle (object)

### Properties
+ `title`: `CSc.` (string, required) - titul

## Customer1 (object)

### Properties
+ customerId: 123456 (number, required) - ID zákazníka
+ firstName: `John` (string, required) - Jméno
+ lastName: `Doe` (string, required) - Příjmení
+ phoneNo: `+420666123456` (string, required, nullable) - Základní telefon
+ eMail: `John.Doe@mail.com` (string, required, nullable) - Základní email
+ extraOffersOn: false (boolean) - Příznak, zda klient souhlasil s odesíláním zvláštních nabídek
+ lastLoginDate: `2015-08-05T08:40:51+02:00` (string, nullable) - Datum posledního přihlášení zákazníka do klientské zóny
+ createDate: `2015-08-05T08:40:51+02:00` (string) - Datum založeníní záznamu zákazníka
+ birthDate: 19600105 (number, nullable) - Datum narození
+ passwordChangeDate: `2015-08-05T08:40:51+02:00` (string, nullable) - Datum poslední změny hesla zákazníka
+ loginName: `johndoe` (string, nullable) - Alternativní přihlašovací jméno, pokud nevyplněno, pouižíva se eMail

## Customer2 (object)

### Properties
+ customerId: 123456 (number, required) - ID zákazníka
+ firstName: `John` (string, required) - Jméno
+ lastName: `Doe` (string, required) - Příjmení
+ phoneNo: `+420666123456` (string, required) - Základní telefon
+ eMail: `John.Doe@mail.com` (string, required) - Základní email
+ extraOffersOn: false (boolean) - Příznak, zda klient souhlasil s odesíláním zvláštních nabídek
+ lastLoginDate: `2015-08-05T08:40:51+02:00` (string) - Datum posledního přihlášení zákazníka do klientské zóny
+ createDate: `2015-08-05T08:40:51+02:00` (string) - Datum založeníní záznamu zákazníka
+ birthDate: 19600105 (number) - Datum narození
+ passwordChangeDate: `2015-08-05T08:40:51+02:00` (string) - Datum poslední změny hesla zákazníka
+ loginName: `johndoe` (string) - Alternativní přihlašovací jméno, pokud nevyplněno, pouižíva se eMail
+ `frontTitles` (array[CustomerTitle]) - seznam titulů před jménem
+ `afterTitles` (array[CustomerAfterTitle]) - seznam titulů za jménem

## BasketCardCredit (object)

### Properties

## MinimalBasket (object)

### Properties
+ `basketId`: `b4a51104-15a6-4aa7-bb87-808f7f188286` (string, required)

## ClearBasket (MinimalBasket)

### Properties

## Basket (MinimalBasket)

### Properties
+ `items` (array[Item], required)
+ `createTime`: `2018-08-06T15:45:10+02:00` (string, required)
+ `selectedDeliveryType`: `1` (number, required, nullable)
+ `isGift`: `false` (boolean, required)
+ `giftMessage`: null (string, required, nullable)
+ `billingAddress`: null (BasketAddress, required, nullable)
+ `paymentInstrument`: null (string, required, nullable)
+ `confirmationUrl`: null (string, required, nullable)
+ `email`: null (string, required, nullable)
+ `shippingEmail`: null (string, required, nullable)
+ `shippingAddress`: null (BasketAddress, required, nullable)
+ `cardId`: null (string, required, nullable)
+ `coupons` (array[BasketCoupon], optional, nullable) - Seznam elektronických kupónů, dodaných v rámci košíku
+ `saveAddress`: `false` (boolean, required)
+ `totalPrice`: `0` (number, required)
+ `totalPriceToPay`: `0` (number, required)
+ `fullTotalPrice`: `0` (number, required)
+ `deliveryPrice`: `0` (number, required)
+ `availableDeliveryTypes` (array[BasketDeliveryType], required)
+ `vat`: `0` (number, required)
+ `totalDiscount`: `0` (number, required)
+ `totalCredit`: `0` (number, required)
+ `cardsTotalCredit` (array[BasketCardCredit], optional, nullable)
+ `availableCredit`: `0` (number, required)
+ `necessaryCreditToCharge`: `0` (number, required)

## BasketCoupon (object)

### Properties
+ `couponId`: `3b8022b3-7ead-4806-9aa1-7e059ae50a28` (string, required) - UUID daného kupónu

## BasketDeliveryType (object)

### Properties
+ `typeId`: `1` (number, required) - ID způsobu doručení
+ `typeDesc`: `PPL` (string, required) - popis způsobu doručení
+ `isVirtual`: `false` (boolean, required) - příznak elektronického doručení
+ `price`: `10000` (number, required) - cena za doručení

## BasketAddress (object)

### Properties
+ `firstName`: `John` (string, required, nullable) - jméno
+ `lastName`: `Doe` (string, required, nullable) - příjmení
+ `phone`: `+420999123456` (string, required, nullable) - telefon

## Change Basket (MinimalBasket)

### Properties
+ `cardId` (string, required, nullable)
+ `coupons` (array[BasketCouponItem], required, nullable)
+ `createTime`: `2018-08-06T15:45:10+02:00` (string, required)
+ `giftMessage`: null (string, required, nullable)
+ `isGift`: `false` (boolean, required)
+ `items` (array[Item], required)
+ `paymentInstrument` (string, required, nullable)
+ `selectedDeliveryType`: `1` (number, required, nullable)
+ `billingAddress` (BasketAddress, required, nullable)
+ `shippingAddress` (BasketAddress, required, nullable)
+ `email`: `test@test.com` (string, required, nullable)
+ `shippingEmail`: `test@test.com` (string, required, nullable)
+ `saveAddress`: `false` (boolean, required)


## Item (object)

### Properties
+ `canChangeVolume`: `true` (boolean, required)
+ `goodsItemItemId`: `108` (number, required)
+ `imagePath`: `http://127.0.0.1:8000/wardeneta/images/Goods/GoPrVoucher.png` (string, required)
+ `insertDate`: `2018-08-06T15:45:10+02:00` (string, required)
+ `itemDesc`: `22 - Dárkový poukaz 2000 Kč nabití` (string, required)
+ `itemId`: `37a27a72-3180-49e2-8c4d-75137cdd18a6` (string, required)
+ `itemName`: `Dárkový poukaz 2000N` (string, required)
+ `itemType`: `goods` (string, required)
+ `price`: `200000` (number, required)
+ `total`: `200000` (number, required)
+ `totalVat`: `0` (number, required)
+ `vat`: `0` (number, required)
+ `volume`: `2` (number, required)


## Přidat zboží (object)

### Properties
+ `basketId`: `3b8022b3-7ead-4806-9aa1-7e059ae50a28` (string, required)
+ `items` (array[Item], required)
+ `createTime`: `2018-05-14T14:31:58.109+00:00` (string, required)
+ `selectedDelivery` (string, required, nullable)
+ `isGift`: `false` (boolean, required)
+ `giftMessage`: null (string, required, nullable)
+ `billingAddress`: null (BasketAddress, required, nullable)
+ `paymentInstrument`: null (string, required, nullable)
+ `confirmationUrl` (string, required, nullable)
+ `email` (string, required, nullable)
+ `shippingEmail` (string, required, nullable)
+ `shippingAddress` (BasketAddress, required, nullable)
+ `reductionCode` (string, required, nullable)
+ `cardId` (string, required, nullable)
+ `coupons` (string, required, nullable)
+ `availableDeliveryTypes`: `[]` (array[string], required)
+ `totalPrice`: `100000` (number, required)
+ `vat`: `0` (number, required)

## Přidat pronájem (object)

### Properties
+ `basketId`: `3b8022b3-7ead-4806-9aa1-7e059ae50a28` (string, required)
+ `items`: `3b8022b3-7ead-4806-9aa1-7e059ae50a28` (array[Item6], required)
+ `createTime`: `2018-08-06T15:45:10+02:00` (string, required)
+ `selectedDelivery` (string, required, nullable)
+ `isGift`: `false` (boolean, required)
+ `giftMessage` (string, required, nullable)
+ `billingAddress` (BasketAddress, required, nullable)
+ `paymentInstrument` (string, required, nullable)
+ `confirmationUrl` (string, required, nullable)
+ `email` (string, required, nullable)
+ `shippingEmail` (string, required, nullable)
+ `shippingAddress` (BasketAddress, required, nullable)
+ `reductionCode` (string, required, nullable)
+ `cardId` (string, required, nullable)
+ `coupons` (string, required, nullable)
+ `availableDeliveryTypes`: `[]` (array[string], required)
+ `totalPrice`: `26250` (number, required)
+ `vat`: `0` (number, required)

## Item6 (object)

### Properties
+ `reservation` (Reservation, required)
+ `itemId`: `9cc25f4a-16af-42f6-8531-9fb74562f4ce` (string, required)
+ `volume`: `1` (number, required)
+ `insertDate`: `2018-08-06T15:45:10+02:00` (string, required)
+ `canChangeVolume`: `false` (boolean, required)
+ `imagePath`: `http://127.0.0.1:8000/wardeneta/images/Goods/GoRent.png` (string, required)
+ `price`: `26250` (number, required)
+ `itemType`: `reservation` (string, required)
+ `itemDesc`: `Vířivka 14.05.2018 18:00-18:30` (string, required)
+ `totalVat`: `0` (number, required)
+ `total`: `26250` (number, required)
+ `itemName`: `Vířivka` (string, required)
+ `vat`: `0` (number, required)

## Reservation (object)

### Properties
+ `areaId`: `B762B784-2959-4725-B588-914B2C512307` (string, required)
+ `establishmentId`: `3` (number, required)
+ `time`: `2018-08-06T15:45:10+02:00` (string, required)
+ `to`: `2018-08-06T15:45:10+02:00` (string, required)


## Coupon (object)

### Properties
+ `goodsItem` (GoodsItem, required)
+ `createTime`: `2018-08-06T15:45:10+02:00` (string, required)
+ `expirationTime`: `2018-08-06T15:45:10+02:00` (string, required)
+ `useTime` (string, required, nullable)
+ `couponId`: `bfb1e980-b796-4023-adea-292ad92d8bd2` (string, required)
+ `transactions`: `[]` (array[string], required)
+ `extraEmail` (string, required, nullable)
+ `couponValue` (string, required, nullable)
+ `serialNo`: `30201105` (string, required)
+ `customer`: `30201105` (Customer, required)


## GoodsItem (object)

### Properties
+ `$type`: `wagoods-items` (string, required)
+ `$id`: `107` (number, required)
+ `defaultPrice`: `100000` (number, required)
+ `itemId`: `107` (number, required)
+ `itemName`: `Dárkový poukaz 1000N` (string, required)
+ `wareMinLevel`: `0` (number, required)
+ `isRentable`: `false` (boolean, required)
+ `state`: `true` (boolean, required)
+ `itemDesc`: `22 - Dárkový poukaz 1000 Kč nabití` (string, required)
+ `earningLevel`: `0` (number, required)
+ `barCode`: `23000000030400` (string, required)


## Customer (object)

### Properties
+ `$type`: `wacustomers` (string, required)
+ `$id`: `1878` (number, required)
+ `passwordChangeDate` (string, required, nullable)
+ `lastName`: `Kobylková` (string, required)
+ `testFlag`: `N` (string, required)
+ `lastLoginDate`: `2018-08-06T15:45:10+02:00` (string, required)
+ `birthDate` (string, required, nullable)
+ `countryId` (string, required, nullable)
+ `customerName` (string, required, nullable)
+ `firstName`: `Martina` (string, required)
+ `bankId`: `21331d36-92fc-11e5-832a-b14855d11b12` (string, required)
+ `idKey` (string, required, nullable)
+ `sexCode` (string, required, nullable)
+ `loginName` (string, required, nullable)
+ `customerId`: `1878` (number, required)
+ `position` (string, required, nullable)
+ `createDate`: `2018-08-06T15:45:10+02:00` (string, required)
+ `status`: `true` (boolean, required)


## Obsazenost provozu s pronájmem (object)

### Properties
+ `date` : `2018-11-11` (string, required) - datum
+ `areaId`: `0001E2BB-9A59-483A-AB9F-CB2B070B8F66` (string, required) - ID zóny
+ `establishmentId`: `3` (number, required) - ID provozu
+ `areaName`: `Dráha 1` (string, required) - název zóny
+ `minimalReservationPeriod`: `30` (number, required)
nejkratší doba pronájmu (1 lekce)
+ `activities` (array[Activity], required)
seznam aktivit


## Activity (object)

### Properties
+ `validFrom`: `2018-06-03T06:30:00+02:00` (string, required)
čas začátku dané aktivity
+ `validTo`: `2018-06-03T18:00:00+02:00` (string, required)
čas konce dané aktivity
+ `isReservable`: `false` (boolean, required) - příznak, zda lze pronajmout pro soukromou aktivitu
+ `isReserved`: `false` (boolean, required)
příznak, zda je obsazeno soukromou aktivitou. Pokud *true* musí být nenulový prvek *reservation*
+ `isClosed`: `true` (boolean, required)
příznak, zda je provoz/zóna uzavřena
+ `isCustomerReservable`: `false` (boolean, required)
příznak, zda v dané zóně může soukromou aktivitu zadat přímo zákazník
+ `reservation` (Activity Reservation, optional, nullable) - detaily o soukromé aktivitě
+ `price`: `19000` (number, required) - cena za vstup do veřeiné aktivity. Platné pokud není obsazenou soukromou aktivitou.

## Activity Reservation (object)

### Properties
+ `reservationId`: `15649` (number, required)
ID kurzu
+ `itemNo`: `1`  (number, required)
ID lekce v rámci kurzu
+ `reservationName`: `Plavecká dráha` (string, optional, nullable)
+ `validFrom`: `2018-06-03T18:00:00+02:00` (string, required)
čas začátku dané lekce
+ `validTo`: `2018-06-03T18:30:00+02:00` (string, required)
čas konce dané lekce
+ `price`: `38000` (number, required)
+ `entryPrice`: `0` (number, required)
+ `acceptBooking`: `false` (boolean, required)
příznak, zda je možné se do dané aktivity přihlašovat. *False* pro uzavřené kurzy.
+ `activityName`: `null`  (string, optional, nullable)
volitelný popis aktivity, např. jóga, apod.
+ `instructorName`: `null`  (string, optional, nullable)
jméno instruktora, který povede danou lekci. Múže se lišit od instruktora, ketrý je
přiřazen pravidlelému běhu pronájmu (záskok)
+ `cardLimit`: `10`  (number, required) - maximální počet účastníků lekce/kurzu
+ `bookedCount`: `0`  (number, required) - počet do lekce/kurzu přihlášených uživatelů
+ `canAddBooking`: `true` (boolean, required)
*True* pokud se aktuální uživatel může přihlásit do aktivity.
+ `canRemoveBooking`: `false` (boolean, required)
příznak, zda se aktální uživatel může z dané lekce odhlásit. Podmínkz pro odhlášení jsou
dány organizačními pravidly dané organizace. Odhlásit je možné pouze z lekce, do které je
uživatel přihlášen.
+ `isCourse`: `false` (boolean, required)
příznak, zda se jedná o uzavrřený kurz, tedy pouze pro předem přihlášenou skupinu
účastníku, či zda se na jednotlivé lekce může pžihlásit jiný uživatel. Do kurzu se
uživatel zařadí koupí produktu (kurzovného), který je svázán s daným kurzem.
+ `isMyCourse`: `false` (boolean, optional)
příznak, zda aktuálně přihlášený uživatel je účastníkme uzavřeného kurzu. Má význam pouze pokud
atribut isCourse je true
+ `canCancel`: `false` (boolean, required)
*True* pokud aktuální uživatel může danou aktivitu ještě zrušit. Pravdila pro rušení jsou specifická
pro danou organizaci.
+ `canAddBookingCards`: `ee2058cc-dee4-11e8-b195-3f1dd4d19a90` (array[string], required)
+ `canRemoveBookingCards`: `ee2058cc-dee4-11e8-b195-3f1dd4d19a90` (array[string], required)
+ `hasBookingCards`: `ee2058cc-dee4-11e8-b195-3f1dd4d19a90` (array[string], required)
+ `firstCourseDate`: `2018-09-01` (string, optional) - datum první lekce daného kurzu
+ `lastCourseDate`: `2019-01-31` (string, optional) - datum poslední lekce daného kurzu

## GDPRItem (object) - GDPR položka
- `stateId`: `1` (number, required) - ID příznaku
- `stateName`: `GDPR příznak 1` (string, required) - název příznaku
- `stateDesc`: `Použití e-mailovcé adresy v aplikaci` (string, required, nullable) - popis příznaku


## GDPRCustomerItem (object)

### Properties
+ `state` (GDPRItem, required)
+ `value`: `true` (boolean, required)

## GDPRCustomerItemRequest (object)

### Properties
+ `state` (GDPRItem, required)
+ `value`: `true` (boolean, required)

## GDPRCustomer (object)

### Properties
+ `firstName`: `Martina` (string, required)
+ `lastName`: `Kobylková` (string, required)
+ `phoneNo`: `78657574` (string, required)
+ `eMail`: `martin.kvicala@icloud.com` (string, required)
+ `idKey` (string, required, nullable)
+ `extraOffersOn`: `false` (boolean, required)
+ `lastLoginDate`: `2018-08-06T15:45:10+02:00` (string, required)
+ `createDate`: `2018-08-06T15:45:10+02:00` (string, required)
+ `birthDate` (string, required, nullable)
+ `passwordChangeDate` (string, required, nullable)
+ `friendlyComposedName`: `Martina Kobylková` (string, required)
+ `loginName` (string, required, nullable)
+ `customerName` (string, required, nullable)
+ `customerId`: `1878` (number, required)
+ `totalCustomerDisplayedCredit`: `2194500` (number, required)
+ `frontTitles`: `2194500` (array[FrontTitle], required)
+ `afterTitles`: `2194500` (array[AfterTitle], required)
+ `status`: `true` (boolean, required)
+ `contactAddress`: `true` (ContactAddress, required)
+ `invoiceAddress`: `true` (InvoiceAddress, required)
+ `isTestCustomer`: `true` (boolean, required)
+ `workingPhoneNo`: `78657574` (string, required)
+ `privatePhoneNo`: `6855675756` (string, required)
+ `workingEMail`: `martin.kvicala@icloud.com` (string, required)
+ `privateEMail`: `martin.kvicala@icloud.com` (string, required)
+ `countryId` (string, required, nullable)
+ `allowsToUseCustomerApp`: `true` (boolean, required)


## FrontTitle (object)


### Properties
+ `title`: `BcA.` (string, required)
+ `titleDesc`: `bakalář umění` (string, required)
+ `isAfterName`: `false` (boolean, required)


## AfterTitle (object)

### Properties
+ `title`: `CSc.` (string, required)
+ `titleDesc`: `kandidát věd` (string, required)
+ `isAfterName`: `true` (boolean, required)


## ContactAddress (object)

### Properties
+ `addressId`: `50f20881-8c70-42bd-9263-da0c9125a58c` (string, required)
+ `street`: `Nová` (string, required)
+ `streetNo`: `124556` (string, required)
+ `zipCode`: `11111` (string, required)
+ `site` (string, required, nullable)
+ `postSite`: `Městecko` (string, required)
+ `addressName` (string, required, nullable)
+ `country`: `SK` (string, required)
+ `friendlyComposedAddress`: `Nová 124556, 11111 Městecko, CZE` (string, required)
+ `shortFriendlyAddress`: `Nová 124556, Městecko` (string, required)


## InvoiceAddress (object)

### Properties
+ `addressId`: `767c2c52-8779-4d0a-8192-ec8ee3d8209e` (string, required)
+ `street`: `ulicka` (string, required)
+ `streetNo`: `2` (string, required)
+ `zipCode`: `67890` (string, required)
+ `site` (string, required, nullable)
+ `postSite`: `Místo` (string, required)
+ `addressName` (string, required, nullable)
+ `country`: `SK` (string, required)
+ `friendlyComposedAddress`: `ulicka 2, 67890 Místo, CZE` (string, required)
+ `shortFriendlyAddress`: `ulicka 2, Místo` (string, required)

## Cards (array[Card])

## Card (object)

### Properties
+ `cardId`: `767c2c52-8779-4d0a-8192-ec8ee3d8209e` (string, required) -  ID karty
+ `aliasName` : `Moje permanentka` (string, optional, nullable) - zákazníkovo pojmenování karty
+ `isActive` : `true` (boolean, required) - příznak, zda je daná karta aktivní
+ `isValid` : `true` (boolean, required) - příznak, zda má daná karta nějakou platnou službu
+ `blocked` : `false` (boolean, required) - příznak, zda je daná karta blokována pro použití
+ `canActivate` : `true` (boolean, required) - příznak, zda lze danou kartu aktivovat
+ `canBlock` : `true` (boolean, required) - příznak, zda lze u dané karty zablokovat její používání
+ `canCharge` : `true` (boolean, required) - příznak, zda lze na danou kartu dobít kredit
+ `canAddTicket` : `false` (boolean, required) - příznak, zda je možné k dané kartě dokoupit doplňkový vstup
+ `canMakeElectronicCopy` : `true` (boolean, required) - příznak, zda lze k dané kartě vytvořít e-kartu
+ `validFrom` : `2018-08-06T15:45:10+02:00` (string, required) - začátek platnosti karty
+ `validTo` : `2020-08-06T22:00:00+02:00` (string, required) - konec platnosti karty
+ `customerDisplayedCredit` : `25000` (number, required) - kredit dostupný zákazníkovi. Může být odlišný od
  skutečného kreditu. V haléřích.

## CardChange (object)

### Properties
+ `cardId`: `767c2c52-8779-4d0a-8192-ec8ee3d8209e` (string, required) -  ID karty
+ `aliasName`: `Moje permanentka` (string, optional, nullable) - zákazníkovo pojmenování karty

## Visits (array[Visit])

## Visit (object)

### Properties
+ `visitId`: `767c2c52-8779-4d0a-8192-ec8ee3d8209e` (string, required) -  ID návštěvy
+ `cardId`: `767c2c52-8779-4d0a-8192-ec8ee3d8209e` (string, required) -  ID karty
+ `totalSum` : `10000` (number, required) - cena návštěvy. V haléřích.
+ `startTime` : `2018-08-09T15:45:10+02:00` (string, required) - začátek návštěvy
+ `endTime` : `2018-08-09T17:4'15:56+02:00` (string, required) - konec návštěvy. Null pokud návštěva
  ještě probíhá.

## Orders (array[Order])

## Order (object)

### Properties
+ `basketId`: `767c2c52-8779-4d0a-8192-ec8ee3d8209e` (string, required) -  ID objednávky

## Přidat kupón

### Properties

## BasketGoodsItem (object)

### Properties

+ itemId: `12345` (number, required) - ID zboží
+ `volume`: `1` (number, required) - počet

## BasketChargeItem (object)

### Properties

+ card: `767c2c52-8779-4d0a-8192-ec8ee3d8209e` (string, required) - ID karty k nabití
+ `amount`: `1` (number, required) - částka nabití v haléřích

## BasketECardItem

### Properties

+ cardId: `767c2c52-8779-4d0a-8192-ec8ee3d8209e` (string, required) - ID karty
k vytvoření e-karty

## BasketReservationItem

### Properties

+ `removeFlag` : `false` (boolean, required) - příznak pro zrušení rezervace
+ `reservationId`: `12345` (number, required) - ID pronájmu
+ `itemNo`: `1` (number, required) - pořadové číslo v rámci pronájmu
+ cardId: `767c2c52-8779-4d0a-8192-ec8ee3d8209e` (string, required) - ID karty

## BasketCouponItem (object)

### Properties

+ couponId: `767c2c52-8779-4d0a-8192-ec8ee3d8209e` (string, required) - ID kupónu
+ `usableAmount`: `1` (number, required) - využitá částka v haléřích

## BasketRateItem (object)

### Properties

+ cardId: `767c2c52-8779-4d0a-8192-ec8ee3d8209e` (string, required) - ID základní karty
+ `rateId`: `123` (number, required) - ID služby pro doplňkový vstup


## BasketNewItems (object)

### Properties
+ basket (Basket)
+ goods (array[BasketGoodsItem])
+ charges (array[BasketChargeItem])
+ ecards (array[BasketECardItem])
+ reservations (array[BasketReservationItem])
+ coupons (array[BasketCouponItem])
+ rates (array[BasketRateItem])


## BasketPayment (object)

### Properties

+ redirectUrl: `http://www.example.com/payment` (string, required) - URL pro přesměrováni na platební bránu
+ transId: `767c2c52-8779-4d0a-8192-ec8ee3d8209e` (string, required) - ID transakce
+ `amount`: `1` (number, required) - částka v haléřích k zaplacení
+ `state`: `CREATED` (string, required) - stav platby

## ApprovedApp (object)

### Properties
+ `clientId`: `767c2c52-8779-4d0a-8192-ec8ee3d8209e` (uuid, required)
ID aplikace. Toto ID je přiděleno aplikaci pře jejím první použitím. Externí aplikace ho předá autorizačnímu serveru
v rámci [požadavku](#my-anchor-gac) na povolení přístupu.
+ `redirectUri`: `https://www.example.com/redirection` (string, required)
URL k přesměrování po získání autorizačního kódu. Toto URL je evidováno pro danou aplikaci a v případě nesouladu bude
žádost odmítnuta. Opět ho předává externí aplikace v rámci sv0ho [požadavku](#my-anchor-gac).
+ `scope`: `customer_access` (string, required)
požadovaný rozsah přístupu, viz OAuth2. Údaj je součásti původního autorizačního [požadavku](#my-anchor-gac).
+ `codeChallengeMethod`: `S256` (string, required)
použitá metoda pro tvorbu [PKCE](https://oauth.net/2/pkce/) *codeChallenge* hodnoty. V sou4asn0 dob2 je podoporov pouze
[SHA-256](https://en.wikipedia.org/wiki/SHA-2) algoritmus. Údaj je součásti původního autorizačního
[požadavku](#my-anchor-gac).
+ `codeChallenge`: `qjrzSW9gMiUgpUvqgEPE4_-8swvyCtfOVvg55o5S_es`(string, required)
ověřovací údaj, viz. [OAuth2 s PKCE](https://oauth.net/2/pkce/). Údaj je součásti úvodního autorizačního
[požadavku](#my-anchor-gac) z externí aplikace na autorizační server.

## ApprovedAppResponse (object)

### Properties
+ `authorizationCode`: `767c2c52-8779-4d0a-8192-ec8ee3d8209e` (uuid, required)
autorizační kód, který bude následně předán externí aplikaci. To pomocí něj vyvolá požadavek na získaní autorizačního
tokenu podle schématu [authorization_code](#my-anchor-ac).
+ `scopes`: `customer_access` (string, required) - seznam schválených přístupů, viz OAuth2.
+ `issueTime` : `2020-08-06T22:00:00+02:00` (string, required) - čas vydání povolení

## ApprovableApp

### Properties
+ `appId`: `767c2c52-8779-4d0a-8192-ec8ee3d8209e` (string, required) - ID aplikace
+ `appName`: `ID Brno` (string, required) - název aplikace
+ `redirectUri`: `https://www.example.com/redirection` (string, required)
URL, kam bude přesměrováno po schválení přístupu k aplikaci. Toto URL je součastí autorizačního
[požadavku](#my-anchor-gac) a je kontrolováno na shodu s tímto údajem.
+ `isActive`: `true` (boolean, required)
příznak aktivity dané aplikace. Neaktivním aplikacím není nadále povolne přístup k datům, a to
i přesto, že uživatel dříve přístup povolil.

## Attendence (object)

### Properties
+ establishmentId: 2 (number, required) - ID provozu
+ establishmentName: `Koupaliště u lesa` (string) - název provozu
+ attendence: 25 (number, required) - aktální návštěvnost
+ attendencePercentual: `12%` (string, required) - procentuální návštěvnost
+ timestamp: `2015-08-05T08:40:51.620Z` (date, required) - čas platnosti uvedených údajů
+ isOpen: true (boolean, required) - příznal, zda je daný provoz aktuálně otevřen

## Attendences (array)

- (Attendence)

## Temperatures (array)

- (Temperature)

## Temperature (object)

### Properties
+ itemName: `TEMP_V_B1` (string, required) - ID čidla
+ itemDesc: `Teplota velkého bazénu` (string) - popis čidla
+ value: `24.6` (string, required) - naměřená hodnota
+ timestamp: `2015-08-05T08:40:51.620Z` (date, required) - čas platnosti uvedených údajů

## Titles (array)

- (Title)

## Title (object)

### Properties
- title: 'Ing.' (string, required) - text titulu
- titleDesc: 'Inženýr' (string) - popis titulu
- isAfterName: false (string, required) - příznak, zda se titul objevuje před 'false', nebo za 'true' jménem

## HealthInsuranceCompanies (array)

- (HealthInsuranceCompany)

## HealthInsuranceCompany (object)

### Properties
- companyId: 207 (number, required) - ID pojišťovny
- companyDesc: `Oborová zdravotní poj. zam. bank, poj. a stav.` (string) - název pojišťovny

## RegistrationResponses (array)

- (RegistrationResponse)

## RegistrationResponse (RegistrationObjet)

### Properties
+ registrationId: `767c2c52-8779-4d0a-8192-ec8ee3d8209e` (uuid, required) - unikátní ID registrace
+ createDate: `2018-06-03T00:00:00+02:00` (string, required) - datum založení registrace
+ customerId: 123456 (number, optional) - ID zákazníka v systému Wardeneta, pokud si již zažádal o členství

## RegistrationRequest (RegistrationObjet)

### Properties
+ registrationId: `767c2c52-8779-4d0a-8192-ec8ee3d8209e` (uuid, optional) - unikátní ID registrace. Pro úravy registrací povinný.

## RegistrationObjet (object)

### Properties
+ backTitles: null (string, optional)
seznam titulů používaných za jménem oddělěných mezerou, povoleno pouze pro registrované starší 18 let.
Dostupné tituly je možné získat pomoci ([totoho API](#person-titles))
+ birthdate: 19801205 (number, required) - datum narození ve tvaru RRRRMMDD
+ deputyBirthdate: 19600308 (number, optional) - datum narození zákonného zástupce ve tvaru RRRRMMDD, povinné pro registrované mladší 18 let, pro osoby starší nepoužíváno
+ deputyEmail: null (string, optional) - email zákonného zástupce, povinné pro registrované mladší 18 let, pro osoby starší nepoužíváno
+ deputyFirstName: null (string, optional) - jméno zákonného zástupce, povinné pro registrované mladší 18 let, pro osoby starší nepoužíváno
+ deputyPhone: null (string, optional) - telefon na zákonného zástupce, povinné pro registrované mladší 18 let, pro osoby starší nepoužíváno
+ deputySurname: null (string, optional) - příjmení zákonného zástupce, povinné pro registrované mladší 18 let, pro osoby starší nepoužíváno
+ email: `josef.novak@mail.cz` (string, optional) - email registrovaného, povinné pro registrované starší 6 let
+ firstName: `Josef` (string, required) - jméno registrovaného
+ frontTitles: null (string, optional) - seznam titulů používaných před jménem oddělěných mezerou, povoleno pouze pro registrované starší 18 let, pro osoby starší nepoužíváno
+ hasExtraNeeds: false (boolean, required) - příznak osoby se zvláštními potřebami
+ extraNeedsDesc: null  (string, optional) - popis charakteru zvláštních potřeb, povinné pokud hasExtraNeeds je true
+ insuranceCompany: HealthInsuranceCompany (HealthInsuranceCompany, required) - popis zdravotní pojišťovny registrovaného
+ nationalityId: `CZ` (string, required) - kód země státní příslušnosti registrovaného
+ phone: `+420666123456` (string, optional) - telefon registrovaného, povinné pro registrované starší 6 let
+ sexCode: 'M' (enum[string], required) - pohlaví registrovaného

        + Members
            + 'M - muž
            + 'F' - žena

+ site: `Praha` (string, required) - obec v adrese registrovaného
+ stret: `Hlavní` (string, required) - ulice v adrese registrovaného
+ stretNo: `123` (string, required) - číslo popisné v adrese registrovaného
+ surname: `Novák` (string, required) - příjmení registrovaného
+ zip: `12345` (string, required) - PSČ v adrese registrovaného
+ countryCode: `CZ` (string, required) - alpha 2 ISO kód země v adrese registrovaného
+ answers (RegistrationAnswers, required) - odpovědi

## RegistrationFormDefinition (object)

### Properties
- questions (RegistrationFormQuestions, required) - seznam otázek
- texts (RegistrationFormTexts, required) - seznam textů
- requiredFields (RegistrationReqFields, optional, nullable) - seznam povinných polí
- logoUrl: `http://server/url/image.jpg` (string, optional, nullable)
URL na volitelné logo zobrazené v horní části formuláře

## RegistrationFormQuestions (array[RegistrationFormQuestion])
## RegistrationFormTexts (array[RegistrationFormText])
## RegistrationFormQuestionAnswers (array[RegistrationFormQuestionAnswer])
## RegistrationAnswers (array[RegistrationAnswer,RegistrationAnswer2])
## RegistrationReqFields (array[RegistrationReqField])

## RegistrationFormQuestion (object)

### Properties
- questionId: 1 (number, required) - ID otázky
- orderId: 1 (number, required) - pořadí otázky ve formuláři
- question: `Povolání` (string, required) - text otázky
- answerType: `S` (enum[string], required) - typ odpovědi

    + Default: `S`

    + Members
        + `S` - textový řetězec
        + `B` - logická hodnota
        + `L` - seznam odpovědí
        + `I` - číslo

- minAge: 120 (number, optional) - počet měsíců věku, od kdy je otázka aktivní
- maxAge: 500 (number, optional) - počet měsíců věku, do kdy je otázka aktivní
- condQuestionId: 3 (number, nullable, optional) - ID otázky, která může ovlivnit použití dané otázky
- condAnswer: `Ano` (string, optional) - odpověď na condQuestionId, aby daná otázka byla aktivní
- answers (RegistrationFormQuestionAnswers, optional) - povolené odpovědi, pokud answerType je L

## RegistrationReqField (object)

### Properties
- fieldId: 1 (number, required) - ID pole
- fieldName: `surname` (string, required) - symbolícký název pole
- minAge: 120 (number, optional) - počet měsíců věku, od kdy je pole povinné. Pokud je null, je poviné
    bez spodního omezení věkem
- maxAge: 500 (number, optional) - počet měsíců věku, do kdy je pole povinné. Pokud je null, je poviné
    bez horního omezení věkem

## RegistrationFormText (object)

### Properties
+ textId: 2 (number, required) - ID textu
+ orderId: 2 (number, required) - pořadí doplňkového textu ve formuláři
+ minAge: 120 (number, optional) - počet měsíců věku, od kdy je text aktivní
+ maxAge: 500 (number, optional) - počet měsíců věku, do kdy je text aktivní
+ textValue: `Text...` (string, required)
    vlastní text (informační text, hyperlinkový odkaz anebo podmínka vyžadující potvrzení zákazníkem)
+ url: null (string, required) - hyperlinkový odkaz na odpovídající dokument
+ checkFlag: true (boolean, required) - příznak, zda má být tento text potvrzen checkboxem

## RegistrationFormQuestionAnswer (object)

### Properties
- answerId: 1 (number, required) - ID odpovědi
- answer: `Nezaměstnaný` (string, required) - text odpovědi

## RegistrationAnswer (object)

### Properties
- questionId: 1 (number, required) - ID otázky
- answer: V domácnosti (string, required) - text odpovědi

## RegistrationAnswer2 (object)

### Properties
- `questionId`: `2` (number, required) - ID otázky
- `answer`: `Pravák` (string, required) - text odpovědi

## BasicHeaders

+ Accept: application/json
+ Authorization: Bearer ABCDEF...

## TimeTableResponse (object)

### Properties
- `institutionName`: `První sportovní` (string, required) - název provozovatele
- `days` (array[TimeTableDay], required) - seznam dnů

## TimeTableDay(object)

### Properties
- `date`: `2018-11-11` (string, required) - datum
- `localities` (array[TimeTableLocality], required) - seznam lokalit

## TimeTableLocality (object)

### Properties

- `localityId`: `2` (number, required) - ID dané lokality
- `localityName`: `Areál 2` (string, required) - název dané lokality
- `establishments`  (array[TimeTableEstablishment], required) - seznam provozů

## TimeTableEstablishment (object)

### Properties

- `establishmentId`: `7` (number, required) - ID daného provozu
- `establishmentName`: `Krytý bazén` (string, required) - název daného provozu
- `isOpen`: `true` (boolean, required) - příznak, zda je daný provoz momentálně otevřen
- `closeReason`: null (string, required) - text s důvodem mimořádného uzavřeni provozu
- `areas`  (array[TimeTableArea], required) - seznam zón

## TimeTableArea (object)

### Properties

- `areaId`: `41adb3d5-c33c-493f-b3f4-ab5efe3fab02` (string, required) - ID ve formě UUID dané zóny
- `areaName`: `Dráha 3` (string, required) - název dané zóny
- `areaGroupName`: `Bazén 50m` (string, required) - název skupiny zóny
- `activities` (array[TimeTableActivity], required) - seznam aktivit

## TimeTableActivity (object)

### Properties

- `validFrom`: `2018-11-30T06:00:00+01:00` (string, required) - čas počátku aktivity
- `validTo`: `2018-11-30T08:00:00+01:00` (string, required) - čas konce aktivity
- `isClosed`: `false` (boolean, required) - příznak, zda je v daném čase daná zóna otevřena _false_ nebo uzavřena _true_.
- `isReservable`: `true` (boolean, required) - příznak, zda je možné zónu v daném čase pronajmout
- `isReservationOnly`: `true` (boolean, required) - příznak, zda daná zóna může v daném čase mít pouzerezervované aktivity
- `isReserved`: `true` (boolean, required) - příznak, zda je daná z=ona právě pronajata pro aktivitu. Popis aktivity je
v poli _reservation_.
- `reservation` (TimeTableReservation, optional) - popis provozované aktivity

## TimeTableReservation (object)

### Properties

- `customerName`: `Plavecký oddíl` (string, required) - název poskytovatele aktivity
- `shortName`: `SWIM` (string, required) - zkratka aktivity
- `note`: `Plavání` (string, required) - popis aktivity
- `infoText`: `Plavání pro pokročilé` (string, required) - podrobnější popis aktivity
- `acceptBooking`: `true` (boolean, required) - příznak, zda se zákazník může do dané aktivity registrovat
- `isCourse`: `false` (boolean, required) - příznak, zda se jedná o uzavřený kurz, či otevřenou lekci
- `activityName`: `Znak a prsa` (string, optional) - název konkrétní lekce
- `instructorName`: `Josef Plavec` (string, optional) - jméno lektora/instruktora vedoucího lekci
- `cardLimit`: `12` (number, optional) - maximální počet účastníků lekce
- `bookedCount`: `6` (number, optional) - aktuální počet registrovaných účastníků lekce

## uuid (string)

Řetězec ve tvaru UUID

## date (string)

Datum v ISO tvaru

## SellableItem (object)

### Properties
- `item` (GoodsItem, required)
záznam o zboží
- `itemCount`: `6` (number, required) - počet zboží na skladě k prodeji